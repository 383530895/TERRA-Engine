//TERRA Engine Header

#ifndef TERRA_ENGINE
#define TERRA_ENGINE

#ifdef __cplusplus
extern "C" {
#endif

#ifdef _WIN32
#include "stdafx.h"
#include <windows.h>
#define TERRA_DYNAMIC_LOAD

#else
#define NULL 0
#endif

#include "stdint.h"

#define INT8 int8_t
#define INT16 int16_t
#define INT32 int32_t
#define UINT8 uint8_t
#define UINT16 uint16_t
#define UINT32 uint32_t

#define TERRASkybox void*
#define TERRAMesh void*
#define TERRAMeshInstance void*
#define TERRAOccluder void*
#define TERRATexture void*
#define TERRAFont void*
#define TERRASound void*
#define TERRASoundSource void*
#define TERRASprite void*
#define TERRAViewport void*
#define TERRACamera void*
#define TERRAImage void*
#define TERRAStream void*
#define TERRATween void*
#define TERRAShader void*
#define TERRAMeshGroup void*
#define TERRAPointLight void*
#define TERRATileSheet void*
#define TERRAPath void*
#define TERRAPathNode void*
#define TERRATileMap void*
#define TERRAXML void*
#define TERRAXMLNode void*
#define TERRAWidget void*
#define TERRASession void*
#define TERRALight void*
#define TERRAUI void*
#define TERRANetMessage void*
#define TERRABillboard void*
#define TERRAParticles void*

typedef void (*TERRAMouseEventCallback) (INT32, INT32, UINT16);
typedef void (*TERRAMouseMoveCallback) (INT32, INT32);
typedef void (*TERRAMouseWheelCallback) (INT32);
typedef void (*TERRAKeyEventCallback) (INT32);
typedef void (*TERRAEventCallback) (void);
typedef void (*TERRAAccelerometerCallback) (float, float, float);
typedef void (*TERRAStateChangeCallback) (INT32);
typedef void (*TERRASceneCallback) ();
typedef void (*TERRAFadeCallback) (void*);
typedef void (*TERRAWidgetEventHandler) (void*);
typedef int (*TERRAPathCostCallback) (INT32, INT32, INT32, INT32);
typedef void (*TERRAVisitNodeCallback) (INT32, INT32);
typedef void (*TERRAErrorCallback) (INT32 ErrorCode);
typedef void (*TERRANetworkCallback) (INT32 Code);
typedef void (*TERRANetworkHandler) (INT32 Owner, TERRAStream Msg);


typedef struct
{
	float x;
	float y;
	float z;
} Vector3D ;

typedef struct
{
	float x;
	float y;
} Vector2D ;

typedef struct
{
	float x;
	float y;
	float z;
	float w;
} Quaternion ;

typedef struct
{
	Vector3D start;
	Vector3D end;
} BoundingBox ;

typedef struct
{
	Vector3D origin;
	Vector3D direction;
} Ray ;

typedef struct
{
	float values[16];
} Matrix4x4;

typedef struct
{
	float values[8];
} Matrix3x3;

typedef struct
{
	UINT8 red;
	UINT8 green;
	UINT8 blue;
	UINT8 alpha;
} Color ;

typedef struct
{
	float a;
	float b;
	float c;
	float d;
} Plane ;

typedef struct {
	Plane planes[6];
	Vector3D vertices[8];
} Frustum ;

typedef Color (*SpriteLightingCallback) (Color, Vector3D);

Color ColorCreate(int red, int green, int blue, int alpha)
{
	Color result;
	result.red = red;
	result.green = green;
	result.blue = blue;
	result.alpha = alpha;
	return result;
}

#ifdef TERRA_DYNAMIC_LOAD
typedef void (FUNC_Settings_SetWidth)(INT32 Width);
typedef void (FUNC_Settings_SetHeight)(INT32 Height);
typedef void (FUNC_Settings_SetTitle)(char* Title);
typedef void (FUNC_Settings_SetHandle)(INT32 Handle);
typedef void (FUNC_Settings_SetFullScreen)(bool Fullscreen);
typedef void (FUNC_Settings_SetVSync)(bool Value);
typedef void (FUNC_Settings_SetAntialias)(INT32 Samples);
typedef void (FUNC_Settings_SetLogging)(bool Value);
typedef void (FUNC_Scene_SetOnRenderShadowCasters)(TERRASceneCallback Callback);
typedef void (FUNC_Scene_SetOnRenderViewport)(TERRASceneCallback Callback);
typedef void (FUNC_Scene_SetOnRenderSprites)(TERRASceneCallback Callback);
typedef void (FUNC_Scene_SetOnRenderSky)(TERRASceneCallback Callback);
typedef void (FUNC_TERRA_SetOnError)(TERRAErrorCallback Callback);
typedef void (FUNC_TERRA_SetOnCreate)(TERRAEventCallback Callback);
typedef void (FUNC_TERRA_SetOnDestroy)(TERRAEventCallback Callback);
typedef void (FUNC_TERRA_SetOnIdle)(TERRAEventCallback Callback);
typedef void (FUNC_TERRA_SetOnMouseDown)(TERRAMouseEventCallback Callback);
typedef void (FUNC_TERRA_SetOnMouseUp)(TERRAMouseEventCallback Callback);
typedef void (FUNC_TERRA_SetOnMouseMove)(TERRAMouseMoveCallback Callback);
typedef void (FUNC_TERRA_SetOnMouseWheel)(TERRAMouseWheelCallback Callback);
typedef void (FUNC_TERRA_SetOnKeyDown)(TERRAKeyEventCallback Callback);
typedef void (FUNC_TERRA_SetOnKeyUp)(TERRAKeyEventCallback Callback);
typedef void (FUNC_TERRA_SetOnAccelerometer)(TERRAAccelerometerCallback Callback);
typedef void (FUNC_TERRA_SetOnStateChange)(TERRAStateChangeCallback Callback);
typedef void (FUNC_TERRA_Run)();
typedef void (FUNC_TERRA_Init)();
typedef void (FUNC_TERRA_Shutdown)();
typedef void (FUNC_TERRA_Resize)(INT32 W, INT32 H);
typedef void (FUNC_TERRA_Log)(char* Desc, INT32 LogType);
typedef UINT32 (FUNC_TERRA_GetTime)();
typedef UINT32 (FUNC_TERRA_GetWidth)();
typedef UINT32 (FUNC_TERRA_GetHeight)();
typedef void (FUNC_TERRA_Pause)(bool Pause);
typedef bool (FUNC_TERRA_Paused)();
typedef void (FUNC_TERRA_EnableAds)();
typedef void (FUNC_TERRA_SendAnalytics)(char* Event, char* Value);
typedef char* (FUNC_Localization_GetLanguage)();
typedef void (FUNC_Localization_SetLanguage)(char* Lang);
typedef char* (FUNC_Localization_GetString)(char* ID);
typedef void (FUNC_Input_SetKeyState)(INT32 Key, bool State);
typedef bool (FUNC_Input_KeyDown)(INT32 Key);
typedef bool (FUNC_Input_KeyPressed)(INT32 Key);
typedef Vector2D (FUNC_Input_GetMousePosition)();
typedef TERRAStream (FUNC_Stream_CreateBuffer)(INT32 Size, void* Ptr);
typedef TERRAStream (FUNC_Stream_Create)(char* Name);
typedef TERRAStream (FUNC_Stream_Open)(char* Name);
typedef bool (FUNC_Stream_EOF)(TERRAStream MyStream);
typedef void (FUNC_Stream_Destroy)(TERRAStream MyStream);
typedef char* (FUNC_Stream_ReadLine)(TERRAStream MyStream);
typedef INT32 (FUNC_Stream_Read)(TERRAStream MyStream, void* Data, INT32 Size);
typedef INT32 (FUNC_Stream_Write)(TERRAStream MyStream, void* Data, INT32 Size);
typedef void (FUNC_Stream_Seek)(TERRAStream MyStream, INT32 Position);
typedef INT32 (FUNC_Stream_GetSize)(TERRAStream MyStream);
typedef INT32 (FUNC_Stream_GetPosition)(TERRAStream MyStream);
typedef char* (FUNC_AssetManager_Search)(char* FileName);
typedef void (FUNC_AssetManager_AddPath)(char* Path);
typedef void (FUNC_AssetManager_RemovePath)(char* Path);
typedef void* (FUNC_AssetManager_GetTexture)(char* Name);
typedef void* (FUNC_AssetManager_GetSound)(char* Name);
typedef void* (FUNC_AssetManager_GetMesh)(char* Name);
typedef void* (FUNC_AssetManager_GetFont)(char* Name);
typedef void (FUNC_AssetManager_Prefetch)(void* MyResource);
typedef void (FUNC_AssetManager_Unload)(void* MyResource);
typedef TERRASession (FUNC_Session_Create)(char* FileName);
typedef void (FUNC_Session_Save)(TERRASession MySession);
typedef void (FUNC_Session_SetValue)(TERRASession MySession, char* Key, char* Value);
typedef char* (FUNC_Session_GetValue)(TERRASession MySession, char* Key);
typedef float (FUNC_Font_GetTextWidth)(TERRAFont MyFont, char* Text);
typedef float (FUNC_Font_GetTextHeight)(TERRAFont MyFont, char* Text);
typedef Vector2D (FUNC_Font_GetTextRect)(TERRAFont MyFont, char* Text);
typedef void (FUNC_Font_DrawText)(TERRAFont MyFont, float X, float Y, float Layer, char* Text, Color MyColor);
typedef TERRAShader (FUNC_Shader_GetFromFactory)(UINT32 FxFlags, UINT32 OutFlags, UINT32 FogFlags, INT32 LightModel, INT32 DirLightCount, INT32 PointLightCount, INT32 SpotLightCount);
typedef void (FUNC_Shader_Bind)(TERRAShader MyShader);
typedef void (FUNC_Shader_SetDefaultCameraUniforms)();
typedef INT32 (FUNC_Shader_GetAttribute)(TERRAShader MyShader, char* AttribName);
typedef void (FUNC_Shader_SetFloat)(TERRAShader MyShader, char* UniformName, float Value);
typedef void (FUNC_Shader_SetVector)(TERRAShader MyShader, char* UniformName, Vector3D Value);
typedef void (FUNC_Shader_SetColor)(TERRAShader MyShader, char* UniformName, Color Value);
typedef void (FUNC_Shader_SetMatrix)(TERRAShader MyShader, char* UniformName, Matrix4x4 Value);
typedef void (FUNC_Texture_Bind)(TERRATexture Tex, INT32 Slot);
typedef INT32 (FUNC_Texture_GetWidth)(TERRAImage Tex);
typedef INT32 (FUNC_Texture_GetHeight)(TERRAImage Tex);
typedef TERRATexture (FUNC_Texture_Create)(char* Name, INT32 Width, INT32 Height);
typedef void (FUNC_Texture_UpdateRect)(TERRATexture Tex, TERRAImage Source, INT32 X, INT32 Y);
typedef TERRAImage (FUNC_Texture_GetImage)(TERRATexture Tex);
typedef void (FUNC_Texture_SetWrapMode)(TERRATexture Tex, bool Wrap);
typedef void (FUNC_Texture_SetMipMapping)(TERRATexture Tex, bool UseMipmaps);
typedef void (FUNC_Texture_SetFiltering)(TERRATexture Tex, INT32 Filtering);
typedef TERRASkybox (FUNC_Skybox_Create)(char* Name);
typedef void (FUNC_Skybox_Render)(TERRASkybox Sky);
typedef void (FUNC_Skybox_Destroy)(TERRASkybox Sky);
typedef TERRAMeshInstance (FUNC_MeshInstance_Create)(TERRAMesh MyMesh);
typedef void (FUNC_MeshInstance_PlayAnimation)(TERRAMeshInstance Instance, char* AnimName);
typedef void (FUNC_MeshInstance_CrossFadeAnimation)(TERRAMeshInstance Instance, char* AnimName, UINT32 Duration);
typedef void (FUNC_MeshInstance_SetDiffuseColor)(TERRAMeshInstance Instance, INT32 Index, Color MyColor);
typedef void (FUNC_MeshInstance_SetDiffuseMap)(TERRAMeshInstance Instance, INT32 Index, TERRATexture Tex);
typedef void (FUNC_MeshInstance_SetVisibility)(TERRAMeshInstance Instance, INT32 Index, bool Visible);
typedef bool (FUNC_MeshInstance_Intersect)(TERRAMeshInstance Instance, Ray R, float* T);
typedef void (FUNC_MeshInstance_SetPosition)(TERRAMeshInstance Instance, Vector3D Position);
typedef void (FUNC_MeshInstance_SetRotation)(TERRAMeshInstance Instance, Vector3D Rotation);
typedef void (FUNC_MeshInstance_SetScale)(TERRAMeshInstance Instance, Vector3D Scale);
typedef void (FUNC_MeshInstance_SetTransform)(TERRAMeshInstance Instance, Matrix4x4 Transform);
typedef void (FUNC_MeshInstance_Destroy)(TERRAMeshInstance Instance);
typedef TERRAMeshGroup (FUNC_MeshInstance_GetGroup)(TERRAMeshInstance Instance, char* Name);
typedef void (FUNC_MeshInstance_SetGroupLocalTransform)(TERRAMeshInstance Instance, INT32 Index, Matrix4x4 Transform);
typedef void (FUNC_MeshInstance_SetGroupGlobalTransform)(TERRAMeshInstance Instance, INT32 Index, Matrix4x4 Transform);
typedef BoundingBox (FUNC_MeshInstance_GetBoundingBox)(TERRAMeshInstance Instance);
typedef INT32 (FUNC_MeshGroup_GetIndex)(TERRAMeshGroup Group);
typedef BoundingBox (FUNC_MeshGroup_GetBoundingBox)(TERRAMeshGroup Group);
typedef TERRAOccluder (FUNC_Occluder_Create)();
typedef void (FUNC_Occluder_SetTransform)(TERRAOccluder Occluder, Matrix4x4 Transform, float Width, float Height);
typedef bool (FUNC_Occluder_PointOccluded)(TERRAOccluder Occluder, Vector3D P);
typedef bool (FUNC_Occluder_BoxOccluded)(TERRAOccluder Occluder, BoundingBox Box);
typedef void (FUNC_Occluder_Destroy)(TERRAOccluder Occluder);
typedef bool (FUNC_Graphics_IsBoxVisible)(BoundingBox Box);
typedef void (FUNC_Graphics_SetBackgroundColor)(Color MyColor);
typedef void (FUNC_Graphics_SetDynamicShadows)(bool Enabled);
typedef void (FUNC_Graphics_SetPostProcessing)(bool Enabled);
typedef void (FUNC_Graphics_SetNormalMapping)(bool Enabled);
typedef void (FUNC_Graphics_SetDepthOfField)(bool Enabled);
typedef void (FUNC_Graphics_SetSSAO)(bool Enabled);
typedef void (FUNC_Graphics_SetFogFlags)(UINT32 Flags);
typedef void (FUNC_Graphics_SetFogColor)(Color MyColor);
typedef void (FUNC_Graphics_SetFogDensity)(float Density);
typedef INT32 (FUNC_Graphics_StatsTriangleCount)();
typedef INT32 (FUNC_Graphics_StatsShaderSwitches)();
typedef INT32 (FUNC_Graphics_StatsDrawCalls)();
typedef INT32 (FUNC_Graphics_StatsLightCount)();
typedef INT32 (FUNC_Graphics_StatsOccluderCount)();
typedef INT32 (FUNC_Graphics_StatsRenderableCount)();
typedef INT32 (FUNC_Graphics_StatsFramesPerSecond)();
typedef Ray (FUNC_Graphics_GetPickRay)(TERRAViewport View, INT32 X, INT32 Y);
typedef void (FUNC_Graphics_AddRenderable)(void* MyRenderable, UINT32 Flags);
typedef void (FUNC_Graphics_AddOccluder)(TERRAOccluder Occluder);
typedef void (FUNC_Graphics_AddLight)(TERRALight Light);
typedef TERRASprite (FUNC_Graphics_AddSprite)(float X, float Y, float Layer, TERRATexture Tex);
typedef void (FUNC_Graphics_FlushSprites)();
typedef TERRACamera (FUNC_Graphics_GetActiveCamera)();
typedef TERRAViewport (FUNC_Graphics_GetActiveViewport)();
typedef float (FUNC_Graphics_ElapsedTime)();
typedef void (FUNC_Light_SetPriority)(TERRALight MyLight, INT32 Priority);
typedef void (FUNC_Light_SetColor)(TERRALight MyLight, Color MyColor);
typedef void (FUNC_Light_SetStatic)(TERRALight MyLight, bool IsStatic);
typedef TERRALight (FUNC_Light_CreateDirectional)(Vector3D Dir);
typedef TERRALight (FUNC_Light_CreatePoint)(Vector3D Position, float Radius);
typedef void (FUNC_Light_Destroy)(TERRALight P);
typedef void (FUNC_Debug_DrawBoundingBox)(BoundingBox MyBox, Color MyColor);
typedef void (FUNC_Debug_DrawFrustum)(Frustum MyFrustum, Color MyColor);
typedef void (FUNC_Debug_DrawRay)(Ray MyRay, Color MyColor, float Length);
typedef void (FUNC_Debug_DrawPlane)(Vector3D Position, Vector3D Normal, float Scale, Color MyColor);
typedef TERRACamera (FUNC_Camera_Create)(char* Name);
typedef void (FUNC_Camera_Destroy)(TERRACamera Cam);
typedef void (FUNC_Camera_Move)(TERRACamera Cam, INT32 Dir, float Speed);
typedef void (FUNC_Camera_Rotate)(TERRACamera Cam, float X, float Y);
typedef void (FUNC_Camera_Fly)(TERRACamera Cam);
typedef void (FUNC_Camera_SetPosition)(TERRACamera Cam, Vector3D Position);
typedef void (FUNC_Camera_SetDirection)(TERRACamera Cam, Vector3D Direction);
typedef void (FUNC_Camera_SetNearPlane)(TERRACamera Cam, float Distance);
typedef void (FUNC_Camera_SetFarPlane)(TERRACamera Cam, float Distance);
typedef void (FUNC_Camera_LookAt)(TERRACamera Cam, Vector3D Position);
typedef Vector3D (FUNC_Camera_GetPosition)(TERRACamera Cam);
typedef Vector3D (FUNC_Camera_GetDirection)(TERRACamera Cam);
typedef Vector3D (FUNC_Camera_GetRight)(TERRACamera Cam);
typedef Matrix4x4 (FUNC_Camera_GetProjection)(TERRACamera Cam);
typedef Matrix4x4 (FUNC_Camera_GetTransform)(TERRACamera Cam);
typedef Vector3D (FUNC_Camera_GetUp)(TERRACamera Cam);
typedef TERRAImage (FUNC_Image_Create)(INT32 Width, INT32 Height);
typedef TERRAImage (FUNC_Image_Load)(char* FileName);
typedef void (FUNC_Image_Destroy)(TERRAImage Img);
typedef Color* (FUNC_Image_GetPixels)(TERRAImage Image);
typedef INT32 (FUNC_Image_GetWidth)(TERRAImage Image);
typedef INT32 (FUNC_Image_GetHeight)(TERRAImage Image);
typedef Color (FUNC_Image_GetPixel)(TERRAImage Image, INT32 X, INT32 Y);
typedef void (FUNC_Image_SetPixel)(TERRAImage Image, INT32 X, INT32 Y, Color Pixel);
typedef TERRAUI (FUNC_UI_Create)();
typedef void (FUNC_UI_Destroy)(TERRAUI MyUI);
typedef void (FUNC_UI_SetColor)(TERRAUI MyUI, Color MyColor);
typedef void (FUNC_UI_SetFocus)(TERRAUI MyUI, TERRAWidget W);
typedef void (FUNC_UI_Clear)(TERRAUI MyUI);
typedef TERRAWidget (FUNC_UI_GetLastWidget)(TERRAUI MyUI);
typedef TERRAWidget (FUNC_UI_GetWidget)(TERRAUI MyUI, char* Name);
typedef void (FUNC_UI_DeleteWidget)(TERRAUI MyUI, TERRAWidget MyWidget);
typedef void (FUNC_UI_LoadCursor)(TERRAUI MyUI, char* Name);
typedef TERRAFont (FUNC_UI_GetDefaultFont)(TERRAUI MyUI);
typedef void (FUNC_UI_SetDefaultFont)(TERRAUI MyUI, TERRAFont MyFont);
typedef bool (FUNC_UI_HasTransition)(TERRAUI MyUI);
typedef void (FUNC_UI_CreateSlideTransition)(TERRAUI MyUI, Vector2D Direction, UINT32 Duration, UINT32 Delay);
typedef void (FUNC_UI_CreateFadeTransition)(TERRAUI MyUI, TERRATexture Tex, UINT32 Duration, UINT32 Delay, bool Invert);
typedef void (FUNC_UI_SetTransitionCallback)(TERRAUI MyUI, TERRAFadeCallback Callback, void* UserData, bool OnStart);
typedef INT32 (FUNC_UI_GetWidth)();
typedef INT32 (FUNC_UI_GetHeight)();
typedef TERRAWidget (FUNC_UI_CreateWindow)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, INT32 Width, INT32 Height);
typedef TERRAWidget (FUNC_UI_CreateButton)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption, char* CustomPNG);
typedef TERRAWidget (FUNC_UI_CreateEditText)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, INT32 Width);
typedef TERRAWidget (FUNC_UI_CreateIcon)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Icon);
typedef TERRAWidget (FUNC_UI_CreateLabel)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
typedef TERRAWidget (FUNC_UI_CreateCheckbox)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
typedef TERRAWidget (FUNC_UI_CreateRadioButton)(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
typedef void (FUNC_UI_MessageBox)(TERRAUI MyUI, char* Msg, TERRAWidgetEventHandler Callback);
typedef void (FUNC_UI_ChoiceBox)(TERRAUI MyUI, char* Msg, char* Btn1, char* Btn2, TERRAWidgetEventHandler Callback1, TERRAWidgetEventHandler Callback2);
typedef TERRATween (FUNC_Widget_AddTween)(TERRAWidget W, INT32 TweenType, float TargetValue, INT32 Time, INT32 Delay);
typedef void (FUNC_Widget_SetDragging)(TERRAWidget W, bool Value);
typedef void (FUNC_Widget_SetScale)(TERRAWidget W, float Scale);
typedef void (FUNC_Widget_SetGroup)(TERRAWidget W, INT32 Group);
typedef void (FUNC_Widget_SetChecked)(TERRAWidget W, bool Value);
typedef bool (FUNC_Widget_IsChecked)(TERRAWidget W);
typedef TERRAFont (FUNC_Widget_GetFont)(TERRAWidget W);
typedef void (FUNC_Widget_SetCaption)(TERRAWidget W, char* Caption);
typedef void (FUNC_Widget_SetText)(TERRAWidget W, char* Text);
typedef void (FUNC_Widget_SetOnClick)(TERRAWidget W, TERRAWidgetEventHandler OnClick);
typedef void (FUNC_Widget_SetOnRelease)(TERRAWidget W, TERRAWidgetEventHandler OnClick);
typedef void (FUNC_Widget_SetOnMouseOver)(TERRAWidget W, TERRAWidgetEventHandler OnClick);
typedef void (FUNC_Widget_SetOnMouseOut)(TERRAWidget W, TERRAWidgetEventHandler OnClick);
typedef void (FUNC_Widget_SetColor)(TERRAWidget W, Color MyColor);
typedef void (FUNC_Widget_SetPosition)(TERRAWidget W, Vector2D Pos);
typedef void (FUNC_Widget_SetVisible)(TERRAWidget W, bool Visible);
typedef TERRATween (FUNC_Widget_ToggleVisibility)(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
typedef TERRATween (FUNC_Widget_Hide)(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
typedef TERRATween (FUNC_Widget_Show)(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
typedef bool (FUNC_Widget_IsVisible)(TERRAWidget W);
typedef bool (FUNC_Widget_HasTweens)(TERRAWidget W);
typedef Vector2D (FUNC_Widget_GetSize)(TERRAWidget W);
typedef Vector2D (FUNC_Widget_GetPosition)(TERRAWidget W);
typedef Color (FUNC_Widget_GetColor)(TERRAWidget W);
typedef char* (FUNC_Widget_GetName)(TERRAWidget W);
typedef char* (FUNC_Widget_GetCaption)(TERRAWidget W);
typedef char* (FUNC_Widget_GetText)(TERRAWidget W);
typedef void (FUNC_Widget_SetAlign)(TERRAWidget W, UINT32 AlignMode);
typedef void (FUNC_Widget_CenterOnPoint)(TERRAWidget W, float X, float Y);
typedef TERRATween (FUNC_Tween_Create)(INT32 MyType, void* Data, float TargetValue, void* UserData);
typedef void (FUNC_Tween_SetEaseType)(TERRATween T, INT32 EaseType);
typedef void (FUNC_Tween_SetTime)(TERRATween T, UINT32 Time);
typedef void (FUNC_Tween_SetDelay)(TERRATween T, UINT32 Delay);
typedef void (FUNC_Tween_SetUserData)(TERRATween T, void* Data);
typedef void (FUNC_Tween_SetCallback)(TERRATween T, TERRAFadeCallback Callback);
typedef void (FUNC_Sprite_SetPosition)(TERRASprite Spr, float X, float Y);
typedef INT32 (FUNC_Sprite_GetWidth)(TERRASprite Spr);
typedef INT32 (FUNC_Sprite_GetHeight)(TERRASprite Spr);
typedef void (FUNC_Sprite_SetWidth)(TERRASprite Spr, INT32 Width);
typedef void (FUNC_Sprite_SetHeight)(TERRASprite Spr, INT32 Height);
typedef void (FUNC_Sprite_SetAnchor)(TERRASprite Spr, Vector2D P);
typedef void (FUNC_Sprite_SetTransform)(TERRASprite Spr, Matrix3x3 Mat);
typedef void (FUNC_Sprite_SetTransformOnCenter)(TERRASprite Spr, Vector2D Center, Matrix3x3 Mat);
typedef void (FUNC_Sprite_SetScaleOnCenter)(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY);
typedef void (FUNC_Sprite_SetScale)(TERRASprite Spr, float ScaleX, float ScaleY);
typedef void (FUNC_Sprite_SetUniformScale)(TERRASprite Spr, float Scale);
typedef void (FUNC_Sprite_SetRotation)(TERRASprite Spr, float Angle);
typedef void (FUNC_Sprite_SetScaleAndRotationOnCenter)(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY, float Rotation);
typedef void (FUNC_Sprite_SetUniformScaleAndRotationOnCenter)(TERRASprite Spr, Vector2D Center, float Scale, float Rotation);
typedef void (FUNC_Sprite_SetScaleAndRotation)(TERRASprite Spr, float ScaleX, float ScaleY, float Rotation);
typedef void (FUNC_Sprite_SetUniformScaleAndRotation)(TERRASprite Spr, float Scale, float Rotation);
typedef void (FUNC_Sprite_SetScaleRelativeOnCenter)(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY);
typedef void (FUNC_Sprite_SetUniformScaleRelativeOnCenter)(TERRASprite Spr, Vector2D Center, float Scale);
typedef void (FUNC_Sprite_SetScaleAndRotationRelativeOnCenter)(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY, float Rotation);
typedef void (FUNC_Sprite_SetUniformScaleAndRotationRelativeOnCenter)(TERRASprite Spr, Vector2D Center, float Scale, float Rotation);
typedef void (FUNC_Sprite_SetTransformRelative)(TERRASprite Spr, Vector2D Center, Matrix3x3 Mat);
typedef void (FUNC_Sprite_SetColors)(TERRASprite Spr, Color A, Color B, Color C, Color D);
typedef void (FUNC_Sprite_SetColor)(TERRASprite Spr, Color C);
typedef void (FUNC_Sprite_SetAlpha)(TERRASprite Spr, UINT8 Alpha);
typedef void (FUNC_Sprite_SetScroll)(TERRASprite Spr, float U, float V);
typedef void (FUNC_Sprite_SetMirror)(TERRASprite Spr, bool Mirror);
typedef void (FUNC_Sprite_SetFlip)(TERRASprite Spr, bool Flip);
typedef void (FUNC_Sprite_TileRemapByID)(TERRASprite Spr, INT32 TileID, INT32 TilesPerRow, INT32 TileSize);
typedef void (FUNC_Sprite_TileRemap)(TERRASprite Spr, INT32 X, INT32 Y, INT32 TilesPerX, INT32 TilesPerY);
typedef void (FUNC_Sprite_PixelRemap)(TERRASprite Spr, INT32 X1, INT32 Y1, INT32 X2, INT32 Y2, INT32 W, INT32 H);
typedef TERRATileMap (FUNC_TileMap_Create)(char* Source);
typedef void (FUNC_TileMap_Destroy)(TERRATileMap Map);
typedef void (FUNC_TileMap_Draw)(TERRATileMap Map, float Depth);
typedef void (FUNC_TileMap_GetPosition)(TERRATileMap Map, float* X, float Y);
typedef void (FUNC_TileMap_SetPosition)(TERRATileMap Map, float* X, float Y);
typedef INT32 (FUNC_TileMap_GetObjectCount)(TERRATileMap Map);
typedef void (FUNC_TileMap_GetObjectPosition)(TERRATileMap Map, INT32 ID, float* X, float* Y);
typedef void (FUNC_TileMap_GetObjectSize)(TERRATileMap Map, INT32 ID, float* W, float* H);
typedef void (FUNC_TileMap_GetObjectTile)(TERRATileMap Map, INT32 ID, INT32* TX, INT32* TY);
typedef INT32 (FUNC_TileMap_GetTileAt)(TERRATileMap Map, INT32 X, INT32 Y, INT32 Layer, bool UsePalette);
typedef char* (FUNC_TileMap_GetObjectProperty)(TERRATileMap Map, INT32 ID, char* Key);
typedef char* (FUNC_TileMap_GetTileProperty)(TERRATileMap Map, INT32 ID, char* Key);
typedef void (FUNC_Music_Play)(char* FileName);
typedef void (FUNC_Music_Stop)();
typedef void (FUNC_Music_SetVolume)(float Volume);
typedef TERRASoundSource (FUNC_Sound_Play)(TERRASound MySound);
typedef INT32 (FUNC_AI_PathGetSize)(TERRAPath Path);
typedef TERRAPathNode (FUNC_AI_PathGetNextNode)(TERRAPath Path);
typedef void (FUNC_AI_NodeGetCoords)(TERRAPathNode Node, INT32* X, INT32* Y);
typedef INT32 (FUNC_AI_CreatePath)(INT32 StartX, INT32 StartY, INT32 EndX, INT32 EndY, INT32 MinX, INT32 MinY, INT32 MaxX, INT32 MaxY, TERRAPath Path, INT32 Flags, TERRAPathCostCallback GetCostCallback, TERRAVisitNodeCallback VisitCallback);
typedef void (FUNC_AI_DestroyPath)(TERRAPath Path);
typedef TERRAXML (FUNC_XML_Open)(char* Name);
typedef TERRAXMLNode (FUNC_XML_GetRoot)(TERRAXML XML);
typedef TERRAXMLNode (FUNC_XML_GetNode)(TERRAXMLNode Node, char* Name);
typedef TERRAXMLNode (FUNC_XML_GetNodeByIndex)(TERRAXMLNode Node, INT32 ID);
typedef INT32 (FUNC_XML_GetNodeCount)(TERRAXMLNode Node);
typedef char* (FUNC_XML_GetNodeName)(TERRAXMLNode Node);
typedef char* (FUNC_XML_GetNodeValue)(TERRAXMLNode Node);
typedef void (FUNC_XML_Destroy)(TERRAXML XML);
typedef void (FUNC_NetClient_SetOnConnectionStart)(TERRANetworkCallback Handler);
typedef void (FUNC_NetClient_SetOnConnectionEnd)(TERRANetworkCallback Handler);
typedef INT32 (FUNC_NetClient_GetLocalId)();
typedef bool (FUNC_NetClient_IsConnected)();
typedef void (FUNC_NetClient_Connect)(char* Address, UINT16 Port, UINT16 Version, char* Username, char* Password);
typedef void (FUNC_NetClient_Disconnect)();
typedef void (FUNC_NetClient_AddHandler)(UINT8 OpCode, TERRANetworkHandler Handler);
typedef bool (FUNC_NetClient_SendMessage)(TERRANetMessage S);
typedef void (FUNC_Decal_Add)(char* TextureName, Vector3D Position, Vector3D Normal, Color DecalColor, float Size, float Rotation, INT32 Duration);
typedef TERRABillboard (FUNC_Billboard_Add)(Vector3D Position, float Width, float Height, TERRATexture MyTexture);
typedef void (FUNC_Billboard_Remap)(TERRABillboard Billboard, float U1, float V1, float U2, float V2);
typedef TERRAParticles (FUNC_Particles_Spawn)(char* FXName, Vector3D Position, bool Loop);

FUNC_Settings_SetWidth *Settings_SetWidth=NULL;
FUNC_Settings_SetHeight *Settings_SetHeight=NULL;
FUNC_Settings_SetTitle *Settings_SetTitle=NULL;
FUNC_Settings_SetHandle *Settings_SetHandle=NULL;
FUNC_Settings_SetFullScreen *Settings_SetFullScreen=NULL;
FUNC_Settings_SetVSync *Settings_SetVSync=NULL;
FUNC_Settings_SetAntialias *Settings_SetAntialias=NULL;
FUNC_Settings_SetLogging *Settings_SetLogging=NULL;
FUNC_Scene_SetOnRenderShadowCasters *Scene_SetOnRenderShadowCasters=NULL;
FUNC_Scene_SetOnRenderViewport *Scene_SetOnRenderViewport=NULL;
FUNC_Scene_SetOnRenderSprites *Scene_SetOnRenderSprites=NULL;
FUNC_Scene_SetOnRenderSky *Scene_SetOnRenderSky=NULL;
FUNC_TERRA_SetOnError *TERRA_SetOnError=NULL;
FUNC_TERRA_SetOnCreate *TERRA_SetOnCreate=NULL;
FUNC_TERRA_SetOnDestroy *TERRA_SetOnDestroy=NULL;
FUNC_TERRA_SetOnIdle *TERRA_SetOnIdle=NULL;
FUNC_TERRA_SetOnMouseDown *TERRA_SetOnMouseDown=NULL;
FUNC_TERRA_SetOnMouseUp *TERRA_SetOnMouseUp=NULL;
FUNC_TERRA_SetOnMouseMove *TERRA_SetOnMouseMove=NULL;
FUNC_TERRA_SetOnMouseWheel *TERRA_SetOnMouseWheel=NULL;
FUNC_TERRA_SetOnKeyDown *TERRA_SetOnKeyDown=NULL;
FUNC_TERRA_SetOnKeyUp *TERRA_SetOnKeyUp=NULL;
FUNC_TERRA_SetOnAccelerometer *TERRA_SetOnAccelerometer=NULL;
FUNC_TERRA_SetOnStateChange *TERRA_SetOnStateChange=NULL;
FUNC_TERRA_Run *TERRA_Run=NULL;
FUNC_TERRA_Init *TERRA_Init=NULL;
FUNC_TERRA_Shutdown *TERRA_Shutdown=NULL;
FUNC_TERRA_Resize *TERRA_Resize=NULL;
FUNC_TERRA_Log *TERRA_Log=NULL;
FUNC_TERRA_GetTime *TERRA_GetTime=NULL;
FUNC_TERRA_GetWidth *TERRA_GetWidth=NULL;
FUNC_TERRA_GetHeight *TERRA_GetHeight=NULL;
FUNC_TERRA_Pause *TERRA_Pause=NULL;
FUNC_TERRA_Paused *TERRA_Paused=NULL;
FUNC_TERRA_EnableAds *TERRA_EnableAds=NULL;
FUNC_TERRA_SendAnalytics *TERRA_SendAnalytics=NULL;
FUNC_Localization_GetLanguage *Localization_GetLanguage=NULL;
FUNC_Localization_SetLanguage *Localization_SetLanguage=NULL;
FUNC_Localization_GetString *Localization_GetString=NULL;
FUNC_Input_SetKeyState *Input_SetKeyState=NULL;
FUNC_Input_KeyDown *Input_KeyDown=NULL;
FUNC_Input_KeyPressed *Input_KeyPressed=NULL;
FUNC_Input_GetMousePosition *Input_GetMousePosition=NULL;
FUNC_Stream_CreateBuffer *Stream_CreateBuffer=NULL;
FUNC_Stream_Create *Stream_Create=NULL;
FUNC_Stream_Open *Stream_Open=NULL;
FUNC_Stream_EOF *Stream_EOF=NULL;
FUNC_Stream_Destroy *Stream_Destroy=NULL;
FUNC_Stream_ReadLine *Stream_ReadLine=NULL;
FUNC_Stream_Read *Stream_Read=NULL;
FUNC_Stream_Write *Stream_Write=NULL;
FUNC_Stream_Seek *Stream_Seek=NULL;
FUNC_Stream_GetSize *Stream_GetSize=NULL;
FUNC_Stream_GetPosition *Stream_GetPosition=NULL;
FUNC_AssetManager_Search *AssetManager_Search=NULL;
FUNC_AssetManager_AddPath *AssetManager_AddPath=NULL;
FUNC_AssetManager_RemovePath *AssetManager_RemovePath=NULL;
FUNC_AssetManager_GetTexture *AssetManager_GetTexture=NULL;
FUNC_AssetManager_GetSound *AssetManager_GetSound=NULL;
FUNC_AssetManager_GetMesh *AssetManager_GetMesh=NULL;
FUNC_AssetManager_GetFont *AssetManager_GetFont=NULL;
FUNC_AssetManager_Prefetch *AssetManager_Prefetch=NULL;
FUNC_AssetManager_Unload *AssetManager_Unload=NULL;
FUNC_Session_Create *Session_Create=NULL;
FUNC_Session_Save *Session_Save=NULL;
FUNC_Session_SetValue *Session_SetValue=NULL;
FUNC_Session_GetValue *Session_GetValue=NULL;
FUNC_Font_GetTextWidth *Font_GetTextWidth=NULL;
FUNC_Font_GetTextHeight *Font_GetTextHeight=NULL;
FUNC_Font_GetTextRect *Font_GetTextRect=NULL;
FUNC_Font_DrawText *Font_DrawText=NULL;
FUNC_Shader_GetFromFactory *Shader_GetFromFactory=NULL;
FUNC_Shader_Bind *Shader_Bind=NULL;
FUNC_Shader_SetDefaultCameraUniforms *Shader_SetDefaultCameraUniforms=NULL;
FUNC_Shader_GetAttribute *Shader_GetAttribute=NULL;
FUNC_Shader_SetFloat *Shader_SetFloat=NULL;
FUNC_Shader_SetVector *Shader_SetVector=NULL;
FUNC_Shader_SetColor *Shader_SetColor=NULL;
FUNC_Shader_SetMatrix *Shader_SetMatrix=NULL;
FUNC_Texture_Bind *Texture_Bind=NULL;
FUNC_Texture_GetWidth *Texture_GetWidth=NULL;
FUNC_Texture_GetHeight *Texture_GetHeight=NULL;
FUNC_Texture_Create *Texture_Create=NULL;
FUNC_Texture_UpdateRect *Texture_UpdateRect=NULL;
FUNC_Texture_GetImage *Texture_GetImage=NULL;
FUNC_Texture_SetWrapMode *Texture_SetWrapMode=NULL;
FUNC_Texture_SetMipMapping *Texture_SetMipMapping=NULL;
FUNC_Texture_SetFiltering *Texture_SetFiltering=NULL;
FUNC_Skybox_Create *Skybox_Create=NULL;
FUNC_Skybox_Render *Skybox_Render=NULL;
FUNC_Skybox_Destroy *Skybox_Destroy=NULL;
FUNC_MeshInstance_Create *MeshInstance_Create=NULL;
FUNC_MeshInstance_PlayAnimation *MeshInstance_PlayAnimation=NULL;
FUNC_MeshInstance_CrossFadeAnimation *MeshInstance_CrossFadeAnimation=NULL;
FUNC_MeshInstance_SetDiffuseColor *MeshInstance_SetDiffuseColor=NULL;
FUNC_MeshInstance_SetDiffuseMap *MeshInstance_SetDiffuseMap=NULL;
FUNC_MeshInstance_SetVisibility *MeshInstance_SetVisibility=NULL;
FUNC_MeshInstance_Intersect *MeshInstance_Intersect=NULL;
FUNC_MeshInstance_SetPosition *MeshInstance_SetPosition=NULL;
FUNC_MeshInstance_SetRotation *MeshInstance_SetRotation=NULL;
FUNC_MeshInstance_SetScale *MeshInstance_SetScale=NULL;
FUNC_MeshInstance_SetTransform *MeshInstance_SetTransform=NULL;
FUNC_MeshInstance_Destroy *MeshInstance_Destroy=NULL;
FUNC_MeshInstance_GetGroup *MeshInstance_GetGroup=NULL;
FUNC_MeshInstance_SetGroupLocalTransform *MeshInstance_SetGroupLocalTransform=NULL;
FUNC_MeshInstance_SetGroupGlobalTransform *MeshInstance_SetGroupGlobalTransform=NULL;
FUNC_MeshInstance_GetBoundingBox *MeshInstance_GetBoundingBox=NULL;
FUNC_MeshGroup_GetIndex *MeshGroup_GetIndex=NULL;
FUNC_MeshGroup_GetBoundingBox *MeshGroup_GetBoundingBox=NULL;
FUNC_Occluder_Create *Occluder_Create=NULL;
FUNC_Occluder_SetTransform *Occluder_SetTransform=NULL;
FUNC_Occluder_PointOccluded *Occluder_PointOccluded=NULL;
FUNC_Occluder_BoxOccluded *Occluder_BoxOccluded=NULL;
FUNC_Occluder_Destroy *Occluder_Destroy=NULL;
FUNC_Graphics_IsBoxVisible *Graphics_IsBoxVisible=NULL;
FUNC_Graphics_SetBackgroundColor *Graphics_SetBackgroundColor=NULL;
FUNC_Graphics_SetDynamicShadows *Graphics_SetDynamicShadows=NULL;
FUNC_Graphics_SetPostProcessing *Graphics_SetPostProcessing=NULL;
FUNC_Graphics_SetNormalMapping *Graphics_SetNormalMapping=NULL;
FUNC_Graphics_SetDepthOfField *Graphics_SetDepthOfField=NULL;
FUNC_Graphics_SetSSAO *Graphics_SetSSAO=NULL;
FUNC_Graphics_SetFogFlags *Graphics_SetFogFlags=NULL;
FUNC_Graphics_SetFogColor *Graphics_SetFogColor=NULL;
FUNC_Graphics_SetFogDensity *Graphics_SetFogDensity=NULL;
FUNC_Graphics_StatsTriangleCount *Graphics_StatsTriangleCount=NULL;
FUNC_Graphics_StatsShaderSwitches *Graphics_StatsShaderSwitches=NULL;
FUNC_Graphics_StatsDrawCalls *Graphics_StatsDrawCalls=NULL;
FUNC_Graphics_StatsLightCount *Graphics_StatsLightCount=NULL;
FUNC_Graphics_StatsOccluderCount *Graphics_StatsOccluderCount=NULL;
FUNC_Graphics_StatsRenderableCount *Graphics_StatsRenderableCount=NULL;
FUNC_Graphics_StatsFramesPerSecond *Graphics_StatsFramesPerSecond=NULL;
FUNC_Graphics_GetPickRay *Graphics_GetPickRay=NULL;
FUNC_Graphics_AddRenderable *Graphics_AddRenderable=NULL;
FUNC_Graphics_AddOccluder *Graphics_AddOccluder=NULL;
FUNC_Graphics_AddLight *Graphics_AddLight=NULL;
FUNC_Graphics_AddSprite *Graphics_AddSprite=NULL;
FUNC_Graphics_FlushSprites *Graphics_FlushSprites=NULL;
FUNC_Graphics_GetActiveCamera *Graphics_GetActiveCamera=NULL;
FUNC_Graphics_GetActiveViewport *Graphics_GetActiveViewport=NULL;
FUNC_Graphics_ElapsedTime *Graphics_ElapsedTime=NULL;
FUNC_Light_SetPriority *Light_SetPriority=NULL;
FUNC_Light_SetColor *Light_SetColor=NULL;
FUNC_Light_SetStatic *Light_SetStatic=NULL;
FUNC_Light_CreateDirectional *Light_CreateDirectional=NULL;
FUNC_Light_CreatePoint *Light_CreatePoint=NULL;
FUNC_Light_Destroy *Light_Destroy=NULL;
FUNC_Debug_DrawBoundingBox *Debug_DrawBoundingBox=NULL;
FUNC_Debug_DrawFrustum *Debug_DrawFrustum=NULL;
FUNC_Debug_DrawRay *Debug_DrawRay=NULL;
FUNC_Debug_DrawPlane *Debug_DrawPlane=NULL;
FUNC_Camera_Create *Camera_Create=NULL;
FUNC_Camera_Destroy *Camera_Destroy=NULL;
FUNC_Camera_Move *Camera_Move=NULL;
FUNC_Camera_Rotate *Camera_Rotate=NULL;
FUNC_Camera_Fly *Camera_Fly=NULL;
FUNC_Camera_SetPosition *Camera_SetPosition=NULL;
FUNC_Camera_SetDirection *Camera_SetDirection=NULL;
FUNC_Camera_SetNearPlane *Camera_SetNearPlane=NULL;
FUNC_Camera_SetFarPlane *Camera_SetFarPlane=NULL;
FUNC_Camera_LookAt *Camera_LookAt=NULL;
FUNC_Camera_GetPosition *Camera_GetPosition=NULL;
FUNC_Camera_GetDirection *Camera_GetDirection=NULL;
FUNC_Camera_GetRight *Camera_GetRight=NULL;
FUNC_Camera_GetProjection *Camera_GetProjection=NULL;
FUNC_Camera_GetTransform *Camera_GetTransform=NULL;
FUNC_Camera_GetUp *Camera_GetUp=NULL;
FUNC_Image_Create *Image_Create=NULL;
FUNC_Image_Load *Image_Load=NULL;
FUNC_Image_Destroy *Image_Destroy=NULL;
FUNC_Image_GetPixels *Image_GetPixels=NULL;
FUNC_Image_GetWidth *Image_GetWidth=NULL;
FUNC_Image_GetHeight *Image_GetHeight=NULL;
FUNC_Image_GetPixel *Image_GetPixel=NULL;
FUNC_Image_SetPixel *Image_SetPixel=NULL;
FUNC_UI_Create *UI_Create=NULL;
FUNC_UI_Destroy *UI_Destroy=NULL;
FUNC_UI_SetColor *UI_SetColor=NULL;
FUNC_UI_SetFocus *UI_SetFocus=NULL;
FUNC_UI_Clear *UI_Clear=NULL;
FUNC_UI_GetLastWidget *UI_GetLastWidget=NULL;
FUNC_UI_GetWidget *UI_GetWidget=NULL;
FUNC_UI_DeleteWidget *UI_DeleteWidget=NULL;
FUNC_UI_LoadCursor *UI_LoadCursor=NULL;
FUNC_UI_GetDefaultFont *UI_GetDefaultFont=NULL;
FUNC_UI_SetDefaultFont *UI_SetDefaultFont=NULL;
FUNC_UI_HasTransition *UI_HasTransition=NULL;
FUNC_UI_CreateSlideTransition *UI_CreateSlideTransition=NULL;
FUNC_UI_CreateFadeTransition *UI_CreateFadeTransition=NULL;
FUNC_UI_SetTransitionCallback *UI_SetTransitionCallback=NULL;
FUNC_UI_GetWidth *UI_GetWidth=NULL;
FUNC_UI_GetHeight *UI_GetHeight=NULL;
FUNC_UI_CreateWindow *UI_CreateWindow=NULL;
FUNC_UI_CreateButton *UI_CreateButton=NULL;
FUNC_UI_CreateEditText *UI_CreateEditText=NULL;
FUNC_UI_CreateIcon *UI_CreateIcon=NULL;
FUNC_UI_CreateLabel *UI_CreateLabel=NULL;
FUNC_UI_CreateCheckbox *UI_CreateCheckbox=NULL;
FUNC_UI_CreateRadioButton *UI_CreateRadioButton=NULL;
FUNC_UI_MessageBox *UI_MessageBox=NULL;
FUNC_UI_ChoiceBox *UI_ChoiceBox=NULL;
FUNC_Widget_AddTween *Widget_AddTween=NULL;
FUNC_Widget_SetDragging *Widget_SetDragging=NULL;
FUNC_Widget_SetScale *Widget_SetScale=NULL;
FUNC_Widget_SetGroup *Widget_SetGroup=NULL;
FUNC_Widget_SetChecked *Widget_SetChecked=NULL;
FUNC_Widget_IsChecked *Widget_IsChecked=NULL;
FUNC_Widget_GetFont *Widget_GetFont=NULL;
FUNC_Widget_SetCaption *Widget_SetCaption=NULL;
FUNC_Widget_SetText *Widget_SetText=NULL;
FUNC_Widget_SetOnClick *Widget_SetOnClick=NULL;
FUNC_Widget_SetOnRelease *Widget_SetOnRelease=NULL;
FUNC_Widget_SetOnMouseOver *Widget_SetOnMouseOver=NULL;
FUNC_Widget_SetOnMouseOut *Widget_SetOnMouseOut=NULL;
FUNC_Widget_SetColor *Widget_SetColor=NULL;
FUNC_Widget_SetPosition *Widget_SetPosition=NULL;
FUNC_Widget_SetVisible *Widget_SetVisible=NULL;
FUNC_Widget_ToggleVisibility *Widget_ToggleVisibility=NULL;
FUNC_Widget_Hide *Widget_Hide=NULL;
FUNC_Widget_Show *Widget_Show=NULL;
FUNC_Widget_IsVisible *Widget_IsVisible=NULL;
FUNC_Widget_HasTweens *Widget_HasTweens=NULL;
FUNC_Widget_GetSize *Widget_GetSize=NULL;
FUNC_Widget_GetPosition *Widget_GetPosition=NULL;
FUNC_Widget_GetColor *Widget_GetColor=NULL;
FUNC_Widget_GetName *Widget_GetName=NULL;
FUNC_Widget_GetCaption *Widget_GetCaption=NULL;
FUNC_Widget_GetText *Widget_GetText=NULL;
FUNC_Widget_SetAlign *Widget_SetAlign=NULL;
FUNC_Widget_CenterOnPoint *Widget_CenterOnPoint=NULL;
FUNC_Tween_Create *Tween_Create=NULL;
FUNC_Tween_SetEaseType *Tween_SetEaseType=NULL;
FUNC_Tween_SetTime *Tween_SetTime=NULL;
FUNC_Tween_SetDelay *Tween_SetDelay=NULL;
FUNC_Tween_SetUserData *Tween_SetUserData=NULL;
FUNC_Tween_SetCallback *Tween_SetCallback=NULL;
FUNC_Sprite_SetPosition *Sprite_SetPosition=NULL;
FUNC_Sprite_GetWidth *Sprite_GetWidth=NULL;
FUNC_Sprite_GetHeight *Sprite_GetHeight=NULL;
FUNC_Sprite_SetWidth *Sprite_SetWidth=NULL;
FUNC_Sprite_SetHeight *Sprite_SetHeight=NULL;
FUNC_Sprite_SetAnchor *Sprite_SetAnchor=NULL;
FUNC_Sprite_SetTransform *Sprite_SetTransform=NULL;
FUNC_Sprite_SetTransformOnCenter *Sprite_SetTransformOnCenter=NULL;
FUNC_Sprite_SetScaleOnCenter *Sprite_SetScaleOnCenter=NULL;
FUNC_Sprite_SetScale *Sprite_SetScale=NULL;
FUNC_Sprite_SetUniformScale *Sprite_SetUniformScale=NULL;
FUNC_Sprite_SetRotation *Sprite_SetRotation=NULL;
FUNC_Sprite_SetScaleAndRotationOnCenter *Sprite_SetScaleAndRotationOnCenter=NULL;
FUNC_Sprite_SetUniformScaleAndRotationOnCenter *Sprite_SetUniformScaleAndRotationOnCenter=NULL;
FUNC_Sprite_SetScaleAndRotation *Sprite_SetScaleAndRotation=NULL;
FUNC_Sprite_SetUniformScaleAndRotation *Sprite_SetUniformScaleAndRotation=NULL;
FUNC_Sprite_SetScaleRelativeOnCenter *Sprite_SetScaleRelativeOnCenter=NULL;
FUNC_Sprite_SetUniformScaleRelativeOnCenter *Sprite_SetUniformScaleRelativeOnCenter=NULL;
FUNC_Sprite_SetScaleAndRotationRelativeOnCenter *Sprite_SetScaleAndRotationRelativeOnCenter=NULL;
FUNC_Sprite_SetUniformScaleAndRotationRelativeOnCenter *Sprite_SetUniformScaleAndRotationRelativeOnCenter=NULL;
FUNC_Sprite_SetTransformRelative *Sprite_SetTransformRelative=NULL;
FUNC_Sprite_SetColors *Sprite_SetColors=NULL;
FUNC_Sprite_SetColor *Sprite_SetColor=NULL;
FUNC_Sprite_SetAlpha *Sprite_SetAlpha=NULL;
FUNC_Sprite_SetScroll *Sprite_SetScroll=NULL;
FUNC_Sprite_SetMirror *Sprite_SetMirror=NULL;
FUNC_Sprite_SetFlip *Sprite_SetFlip=NULL;
FUNC_Sprite_TileRemapByID *Sprite_TileRemapByID=NULL;
FUNC_Sprite_TileRemap *Sprite_TileRemap=NULL;
FUNC_Sprite_PixelRemap *Sprite_PixelRemap=NULL;
FUNC_TileMap_Create *TileMap_Create=NULL;
FUNC_TileMap_Destroy *TileMap_Destroy=NULL;
FUNC_TileMap_Draw *TileMap_Draw=NULL;
FUNC_TileMap_GetPosition *TileMap_GetPosition=NULL;
FUNC_TileMap_SetPosition *TileMap_SetPosition=NULL;
FUNC_TileMap_GetObjectCount *TileMap_GetObjectCount=NULL;
FUNC_TileMap_GetObjectPosition *TileMap_GetObjectPosition=NULL;
FUNC_TileMap_GetObjectSize *TileMap_GetObjectSize=NULL;
FUNC_TileMap_GetObjectTile *TileMap_GetObjectTile=NULL;
FUNC_TileMap_GetTileAt *TileMap_GetTileAt=NULL;
FUNC_TileMap_GetObjectProperty *TileMap_GetObjectProperty=NULL;
FUNC_TileMap_GetTileProperty *TileMap_GetTileProperty=NULL;
FUNC_Music_Play *Music_Play=NULL;
FUNC_Music_Stop *Music_Stop=NULL;
FUNC_Music_SetVolume *Music_SetVolume=NULL;
FUNC_Sound_Play *Sound_Play=NULL;
FUNC_AI_PathGetSize *AI_PathGetSize=NULL;
FUNC_AI_PathGetNextNode *AI_PathGetNextNode=NULL;
FUNC_AI_NodeGetCoords *AI_NodeGetCoords=NULL;
FUNC_AI_CreatePath *AI_CreatePath=NULL;
FUNC_AI_DestroyPath *AI_DestroyPath=NULL;
FUNC_XML_Open *XML_Open=NULL;
FUNC_XML_GetRoot *XML_GetRoot=NULL;
FUNC_XML_GetNode *XML_GetNode=NULL;
FUNC_XML_GetNodeByIndex *XML_GetNodeByIndex=NULL;
FUNC_XML_GetNodeCount *XML_GetNodeCount=NULL;
FUNC_XML_GetNodeName *XML_GetNodeName=NULL;
FUNC_XML_GetNodeValue *XML_GetNodeValue=NULL;
FUNC_XML_Destroy *XML_Destroy=NULL;
FUNC_NetClient_SetOnConnectionStart *NetClient_SetOnConnectionStart=NULL;
FUNC_NetClient_SetOnConnectionEnd *NetClient_SetOnConnectionEnd=NULL;
FUNC_NetClient_GetLocalId *NetClient_GetLocalId=NULL;
FUNC_NetClient_IsConnected *NetClient_IsConnected=NULL;
FUNC_NetClient_Connect *NetClient_Connect=NULL;
FUNC_NetClient_Disconnect *NetClient_Disconnect=NULL;
FUNC_NetClient_AddHandler *NetClient_AddHandler=NULL;
FUNC_NetClient_SendMessage *NetClient_SendMessage=NULL;
FUNC_Decal_Add *Decal_Add=NULL;
FUNC_Billboard_Add *Billboard_Add=NULL;
FUNC_Billboard_Remap *Billboard_Remap=NULL;
FUNC_Particles_Spawn *Particles_Spawn=NULL;


int LoadTERRALibrary()
{
	HINSTANCE terraDLL = LoadLibrary("terra_engine.dll");
	if (terraDLL == NULL) return -1;

  Settings_SetWidth = (FUNC_Settings_SetWidth*) GetProcAddress(terraDLL, "Settings_SetWidth");
  Settings_SetHeight = (FUNC_Settings_SetHeight*) GetProcAddress(terraDLL, "Settings_SetHeight");
  Settings_SetTitle = (FUNC_Settings_SetTitle*) GetProcAddress(terraDLL, "Settings_SetTitle");
  Settings_SetHandle = (FUNC_Settings_SetHandle*) GetProcAddress(terraDLL, "Settings_SetHandle");
  Settings_SetFullScreen = (FUNC_Settings_SetFullScreen*) GetProcAddress(terraDLL, "Settings_SetFullScreen");
  Settings_SetVSync = (FUNC_Settings_SetVSync*) GetProcAddress(terraDLL, "Settings_SetVSync");
  Settings_SetAntialias = (FUNC_Settings_SetAntialias*) GetProcAddress(terraDLL, "Settings_SetAntialias");
  Settings_SetLogging = (FUNC_Settings_SetLogging*) GetProcAddress(terraDLL, "Settings_SetLogging");
  Scene_SetOnRenderShadowCasters = (FUNC_Scene_SetOnRenderShadowCasters*) GetProcAddress(terraDLL, "Scene_SetOnRenderShadowCasters");
  Scene_SetOnRenderViewport = (FUNC_Scene_SetOnRenderViewport*) GetProcAddress(terraDLL, "Scene_SetOnRenderViewport");
  Scene_SetOnRenderSprites = (FUNC_Scene_SetOnRenderSprites*) GetProcAddress(terraDLL, "Scene_SetOnRenderSprites");
  Scene_SetOnRenderSky = (FUNC_Scene_SetOnRenderSky*) GetProcAddress(terraDLL, "Scene_SetOnRenderSky");
  TERRA_SetOnError = (FUNC_TERRA_SetOnError*) GetProcAddress(terraDLL, "TERRA_SetOnError");
  TERRA_SetOnCreate = (FUNC_TERRA_SetOnCreate*) GetProcAddress(terraDLL, "TERRA_SetOnCreate");
  TERRA_SetOnDestroy = (FUNC_TERRA_SetOnDestroy*) GetProcAddress(terraDLL, "TERRA_SetOnDestroy");
  TERRA_SetOnIdle = (FUNC_TERRA_SetOnIdle*) GetProcAddress(terraDLL, "TERRA_SetOnIdle");
  TERRA_SetOnMouseDown = (FUNC_TERRA_SetOnMouseDown*) GetProcAddress(terraDLL, "TERRA_SetOnMouseDown");
  TERRA_SetOnMouseUp = (FUNC_TERRA_SetOnMouseUp*) GetProcAddress(terraDLL, "TERRA_SetOnMouseUp");
  TERRA_SetOnMouseMove = (FUNC_TERRA_SetOnMouseMove*) GetProcAddress(terraDLL, "TERRA_SetOnMouseMove");
  TERRA_SetOnMouseWheel = (FUNC_TERRA_SetOnMouseWheel*) GetProcAddress(terraDLL, "TERRA_SetOnMouseWheel");
  TERRA_SetOnKeyDown = (FUNC_TERRA_SetOnKeyDown*) GetProcAddress(terraDLL, "TERRA_SetOnKeyDown");
  TERRA_SetOnKeyUp = (FUNC_TERRA_SetOnKeyUp*) GetProcAddress(terraDLL, "TERRA_SetOnKeyUp");
  TERRA_SetOnAccelerometer = (FUNC_TERRA_SetOnAccelerometer*) GetProcAddress(terraDLL, "TERRA_SetOnAccelerometer");
  TERRA_SetOnStateChange = (FUNC_TERRA_SetOnStateChange*) GetProcAddress(terraDLL, "TERRA_SetOnStateChange");
  TERRA_Run = (FUNC_TERRA_Run*) GetProcAddress(terraDLL, "TERRA_Run");
  TERRA_Init = (FUNC_TERRA_Init*) GetProcAddress(terraDLL, "TERRA_Init");
  TERRA_Shutdown = (FUNC_TERRA_Shutdown*) GetProcAddress(terraDLL, "TERRA_Shutdown");
  TERRA_Resize = (FUNC_TERRA_Resize*) GetProcAddress(terraDLL, "TERRA_Resize");
  TERRA_Log = (FUNC_TERRA_Log*) GetProcAddress(terraDLL, "TERRA_Log");
  TERRA_GetTime = (FUNC_TERRA_GetTime*) GetProcAddress(terraDLL, "TERRA_GetTime");
  TERRA_GetWidth = (FUNC_TERRA_GetWidth*) GetProcAddress(terraDLL, "TERRA_GetWidth");
  TERRA_GetHeight = (FUNC_TERRA_GetHeight*) GetProcAddress(terraDLL, "TERRA_GetHeight");
  TERRA_Pause = (FUNC_TERRA_Pause*) GetProcAddress(terraDLL, "TERRA_Pause");
  TERRA_Paused = (FUNC_TERRA_Paused*) GetProcAddress(terraDLL, "TERRA_Paused");
  TERRA_EnableAds = (FUNC_TERRA_EnableAds*) GetProcAddress(terraDLL, "TERRA_EnableAds");
  TERRA_SendAnalytics = (FUNC_TERRA_SendAnalytics*) GetProcAddress(terraDLL, "TERRA_SendAnalytics");
  Localization_GetLanguage = (FUNC_Localization_GetLanguage*) GetProcAddress(terraDLL, "Localization_GetLanguage");
  Localization_SetLanguage = (FUNC_Localization_SetLanguage*) GetProcAddress(terraDLL, "Localization_SetLanguage");
  Localization_GetString = (FUNC_Localization_GetString*) GetProcAddress(terraDLL, "Localization_GetString");
  Input_SetKeyState = (FUNC_Input_SetKeyState*) GetProcAddress(terraDLL, "Input_SetKeyState");
  Input_KeyDown = (FUNC_Input_KeyDown*) GetProcAddress(terraDLL, "Input_KeyDown");
  Input_KeyPressed = (FUNC_Input_KeyPressed*) GetProcAddress(terraDLL, "Input_KeyPressed");
  Input_GetMousePosition = (FUNC_Input_GetMousePosition*) GetProcAddress(terraDLL, "Input_GetMousePosition");
  Stream_CreateBuffer = (FUNC_Stream_CreateBuffer*) GetProcAddress(terraDLL, "Stream_CreateBuffer");
  Stream_Create = (FUNC_Stream_Create*) GetProcAddress(terraDLL, "Stream_Create");
  Stream_Open = (FUNC_Stream_Open*) GetProcAddress(terraDLL, "Stream_Open");
  Stream_EOF = (FUNC_Stream_EOF*) GetProcAddress(terraDLL, "Stream_EOF");
  Stream_Destroy = (FUNC_Stream_Destroy*) GetProcAddress(terraDLL, "Stream_Destroy");
  Stream_ReadLine = (FUNC_Stream_ReadLine*) GetProcAddress(terraDLL, "Stream_ReadLine");
  Stream_Read = (FUNC_Stream_Read*) GetProcAddress(terraDLL, "Stream_Read");
  Stream_Write = (FUNC_Stream_Write*) GetProcAddress(terraDLL, "Stream_Write");
  Stream_Seek = (FUNC_Stream_Seek*) GetProcAddress(terraDLL, "Stream_Seek");
  Stream_GetSize = (FUNC_Stream_GetSize*) GetProcAddress(terraDLL, "Stream_GetSize");
  Stream_GetPosition = (FUNC_Stream_GetPosition*) GetProcAddress(terraDLL, "Stream_GetPosition");
  AssetManager_Search = (FUNC_AssetManager_Search*) GetProcAddress(terraDLL, "AssetManager_Search");
  AssetManager_AddPath = (FUNC_AssetManager_AddPath*) GetProcAddress(terraDLL, "AssetManager_AddPath");
  AssetManager_RemovePath = (FUNC_AssetManager_RemovePath*) GetProcAddress(terraDLL, "AssetManager_RemovePath");
  AssetManager_GetTexture = (FUNC_AssetManager_GetTexture*) GetProcAddress(terraDLL, "AssetManager_GetTexture");
  AssetManager_GetSound = (FUNC_AssetManager_GetSound*) GetProcAddress(terraDLL, "AssetManager_GetSound");
  AssetManager_GetMesh = (FUNC_AssetManager_GetMesh*) GetProcAddress(terraDLL, "AssetManager_GetMesh");
  AssetManager_GetFont = (FUNC_AssetManager_GetFont*) GetProcAddress(terraDLL, "AssetManager_GetFont");
  AssetManager_Prefetch = (FUNC_AssetManager_Prefetch*) GetProcAddress(terraDLL, "AssetManager_Prefetch");
  AssetManager_Unload = (FUNC_AssetManager_Unload*) GetProcAddress(terraDLL, "AssetManager_Unload");
  Session_Create = (FUNC_Session_Create*) GetProcAddress(terraDLL, "Session_Create");
  Session_Save = (FUNC_Session_Save*) GetProcAddress(terraDLL, "Session_Save");
  Session_SetValue = (FUNC_Session_SetValue*) GetProcAddress(terraDLL, "Session_SetValue");
  Session_GetValue = (FUNC_Session_GetValue*) GetProcAddress(terraDLL, "Session_GetValue");
  Font_GetTextWidth = (FUNC_Font_GetTextWidth*) GetProcAddress(terraDLL, "Font_GetTextWidth");
  Font_GetTextHeight = (FUNC_Font_GetTextHeight*) GetProcAddress(terraDLL, "Font_GetTextHeight");
  Font_GetTextRect = (FUNC_Font_GetTextRect*) GetProcAddress(terraDLL, "Font_GetTextRect");
  Font_DrawText = (FUNC_Font_DrawText*) GetProcAddress(terraDLL, "Font_DrawText");
  Shader_GetFromFactory = (FUNC_Shader_GetFromFactory*) GetProcAddress(terraDLL, "Shader_GetFromFactory");
  Shader_Bind = (FUNC_Shader_Bind*) GetProcAddress(terraDLL, "Shader_Bind");
  Shader_SetDefaultCameraUniforms = (FUNC_Shader_SetDefaultCameraUniforms*) GetProcAddress(terraDLL, "Shader_SetDefaultCameraUniforms");
  Shader_GetAttribute = (FUNC_Shader_GetAttribute*) GetProcAddress(terraDLL, "Shader_GetAttribute");
  Shader_SetFloat = (FUNC_Shader_SetFloat*) GetProcAddress(terraDLL, "Shader_SetFloat");
  Shader_SetVector = (FUNC_Shader_SetVector*) GetProcAddress(terraDLL, "Shader_SetVector");
  Shader_SetColor = (FUNC_Shader_SetColor*) GetProcAddress(terraDLL, "Shader_SetColor");
  Shader_SetMatrix = (FUNC_Shader_SetMatrix*) GetProcAddress(terraDLL, "Shader_SetMatrix");
  Texture_Bind = (FUNC_Texture_Bind*) GetProcAddress(terraDLL, "Texture_Bind");
  Texture_GetWidth = (FUNC_Texture_GetWidth*) GetProcAddress(terraDLL, "Texture_GetWidth");
  Texture_GetHeight = (FUNC_Texture_GetHeight*) GetProcAddress(terraDLL, "Texture_GetHeight");
  Texture_Create = (FUNC_Texture_Create*) GetProcAddress(terraDLL, "Texture_Create");
  Texture_UpdateRect = (FUNC_Texture_UpdateRect*) GetProcAddress(terraDLL, "Texture_UpdateRect");
  Texture_GetImage = (FUNC_Texture_GetImage*) GetProcAddress(terraDLL, "Texture_GetImage");
  Texture_SetWrapMode = (FUNC_Texture_SetWrapMode*) GetProcAddress(terraDLL, "Texture_SetWrapMode");
  Texture_SetMipMapping = (FUNC_Texture_SetMipMapping*) GetProcAddress(terraDLL, "Texture_SetMipMapping");
  Texture_SetFiltering = (FUNC_Texture_SetFiltering*) GetProcAddress(terraDLL, "Texture_SetFiltering");
  Skybox_Create = (FUNC_Skybox_Create*) GetProcAddress(terraDLL, "Skybox_Create");
  Skybox_Render = (FUNC_Skybox_Render*) GetProcAddress(terraDLL, "Skybox_Render");
  Skybox_Destroy = (FUNC_Skybox_Destroy*) GetProcAddress(terraDLL, "Skybox_Destroy");
  MeshInstance_Create = (FUNC_MeshInstance_Create*) GetProcAddress(terraDLL, "MeshInstance_Create");
  MeshInstance_PlayAnimation = (FUNC_MeshInstance_PlayAnimation*) GetProcAddress(terraDLL, "MeshInstance_PlayAnimation");
  MeshInstance_CrossFadeAnimation = (FUNC_MeshInstance_CrossFadeAnimation*) GetProcAddress(terraDLL, "MeshInstance_CrossFadeAnimation");
  MeshInstance_SetDiffuseColor = (FUNC_MeshInstance_SetDiffuseColor*) GetProcAddress(terraDLL, "MeshInstance_SetDiffuseColor");
  MeshInstance_SetDiffuseMap = (FUNC_MeshInstance_SetDiffuseMap*) GetProcAddress(terraDLL, "MeshInstance_SetDiffuseMap");
  MeshInstance_SetVisibility = (FUNC_MeshInstance_SetVisibility*) GetProcAddress(terraDLL, "MeshInstance_SetVisibility");
  MeshInstance_Intersect = (FUNC_MeshInstance_Intersect*) GetProcAddress(terraDLL, "MeshInstance_Intersect");
  MeshInstance_SetPosition = (FUNC_MeshInstance_SetPosition*) GetProcAddress(terraDLL, "MeshInstance_SetPosition");
  MeshInstance_SetRotation = (FUNC_MeshInstance_SetRotation*) GetProcAddress(terraDLL, "MeshInstance_SetRotation");
  MeshInstance_SetScale = (FUNC_MeshInstance_SetScale*) GetProcAddress(terraDLL, "MeshInstance_SetScale");
  MeshInstance_SetTransform = (FUNC_MeshInstance_SetTransform*) GetProcAddress(terraDLL, "MeshInstance_SetTransform");
  MeshInstance_Destroy = (FUNC_MeshInstance_Destroy*) GetProcAddress(terraDLL, "MeshInstance_Destroy");
  MeshInstance_GetGroup = (FUNC_MeshInstance_GetGroup*) GetProcAddress(terraDLL, "MeshInstance_GetGroup");
  MeshInstance_SetGroupLocalTransform = (FUNC_MeshInstance_SetGroupLocalTransform*) GetProcAddress(terraDLL, "MeshInstance_SetGroupLocalTransform");
  MeshInstance_SetGroupGlobalTransform = (FUNC_MeshInstance_SetGroupGlobalTransform*) GetProcAddress(terraDLL, "MeshInstance_SetGroupGlobalTransform");
  MeshInstance_GetBoundingBox = (FUNC_MeshInstance_GetBoundingBox*) GetProcAddress(terraDLL, "MeshInstance_GetBoundingBox");
  MeshGroup_GetIndex = (FUNC_MeshGroup_GetIndex*) GetProcAddress(terraDLL, "MeshGroup_GetIndex");
  MeshGroup_GetBoundingBox = (FUNC_MeshGroup_GetBoundingBox*) GetProcAddress(terraDLL, "MeshGroup_GetBoundingBox");
  Occluder_Create = (FUNC_Occluder_Create*) GetProcAddress(terraDLL, "Occluder_Create");
  Occluder_SetTransform = (FUNC_Occluder_SetTransform*) GetProcAddress(terraDLL, "Occluder_SetTransform");
  Occluder_PointOccluded = (FUNC_Occluder_PointOccluded*) GetProcAddress(terraDLL, "Occluder_PointOccluded");
  Occluder_BoxOccluded = (FUNC_Occluder_BoxOccluded*) GetProcAddress(terraDLL, "Occluder_BoxOccluded");
  Occluder_Destroy = (FUNC_Occluder_Destroy*) GetProcAddress(terraDLL, "Occluder_Destroy");
  Graphics_IsBoxVisible = (FUNC_Graphics_IsBoxVisible*) GetProcAddress(terraDLL, "Graphics_IsBoxVisible");
  Graphics_SetBackgroundColor = (FUNC_Graphics_SetBackgroundColor*) GetProcAddress(terraDLL, "Graphics_SetBackgroundColor");
  Graphics_SetDynamicShadows = (FUNC_Graphics_SetDynamicShadows*) GetProcAddress(terraDLL, "Graphics_SetDynamicShadows");
  Graphics_SetPostProcessing = (FUNC_Graphics_SetPostProcessing*) GetProcAddress(terraDLL, "Graphics_SetPostProcessing");
  Graphics_SetNormalMapping = (FUNC_Graphics_SetNormalMapping*) GetProcAddress(terraDLL, "Graphics_SetNormalMapping");
  Graphics_SetDepthOfField = (FUNC_Graphics_SetDepthOfField*) GetProcAddress(terraDLL, "Graphics_SetDepthOfField");
  Graphics_SetSSAO = (FUNC_Graphics_SetSSAO*) GetProcAddress(terraDLL, "Graphics_SetSSAO");
  Graphics_SetFogFlags = (FUNC_Graphics_SetFogFlags*) GetProcAddress(terraDLL, "Graphics_SetFogFlags");
  Graphics_SetFogColor = (FUNC_Graphics_SetFogColor*) GetProcAddress(terraDLL, "Graphics_SetFogColor");
  Graphics_SetFogDensity = (FUNC_Graphics_SetFogDensity*) GetProcAddress(terraDLL, "Graphics_SetFogDensity");
  Graphics_StatsTriangleCount = (FUNC_Graphics_StatsTriangleCount*) GetProcAddress(terraDLL, "Graphics_StatsTriangleCount");
  Graphics_StatsShaderSwitches = (FUNC_Graphics_StatsShaderSwitches*) GetProcAddress(terraDLL, "Graphics_StatsShaderSwitches");
  Graphics_StatsDrawCalls = (FUNC_Graphics_StatsDrawCalls*) GetProcAddress(terraDLL, "Graphics_StatsDrawCalls");
  Graphics_StatsLightCount = (FUNC_Graphics_StatsLightCount*) GetProcAddress(terraDLL, "Graphics_StatsLightCount");
  Graphics_StatsOccluderCount = (FUNC_Graphics_StatsOccluderCount*) GetProcAddress(terraDLL, "Graphics_StatsOccluderCount");
  Graphics_StatsRenderableCount = (FUNC_Graphics_StatsRenderableCount*) GetProcAddress(terraDLL, "Graphics_StatsRenderableCount");
  Graphics_StatsFramesPerSecond = (FUNC_Graphics_StatsFramesPerSecond*) GetProcAddress(terraDLL, "Graphics_StatsFramesPerSecond");
  Graphics_GetPickRay = (FUNC_Graphics_GetPickRay*) GetProcAddress(terraDLL, "Graphics_GetPickRay");
  Graphics_AddRenderable = (FUNC_Graphics_AddRenderable*) GetProcAddress(terraDLL, "Graphics_AddRenderable");
  Graphics_AddOccluder = (FUNC_Graphics_AddOccluder*) GetProcAddress(terraDLL, "Graphics_AddOccluder");
  Graphics_AddLight = (FUNC_Graphics_AddLight*) GetProcAddress(terraDLL, "Graphics_AddLight");
  Graphics_AddSprite = (FUNC_Graphics_AddSprite*) GetProcAddress(terraDLL, "Graphics_AddSprite");
  Graphics_FlushSprites = (FUNC_Graphics_FlushSprites*) GetProcAddress(terraDLL, "Graphics_FlushSprites");
  Graphics_GetActiveCamera = (FUNC_Graphics_GetActiveCamera*) GetProcAddress(terraDLL, "Graphics_GetActiveCamera");
  Graphics_GetActiveViewport = (FUNC_Graphics_GetActiveViewport*) GetProcAddress(terraDLL, "Graphics_GetActiveViewport");
  Graphics_ElapsedTime = (FUNC_Graphics_ElapsedTime*) GetProcAddress(terraDLL, "Graphics_ElapsedTime");
  Light_SetPriority = (FUNC_Light_SetPriority*) GetProcAddress(terraDLL, "Light_SetPriority");
  Light_SetColor = (FUNC_Light_SetColor*) GetProcAddress(terraDLL, "Light_SetColor");
  Light_SetStatic = (FUNC_Light_SetStatic*) GetProcAddress(terraDLL, "Light_SetStatic");
  Light_CreateDirectional = (FUNC_Light_CreateDirectional*) GetProcAddress(terraDLL, "Light_CreateDirectional");
  Light_CreatePoint = (FUNC_Light_CreatePoint*) GetProcAddress(terraDLL, "Light_CreatePoint");
  Light_Destroy = (FUNC_Light_Destroy*) GetProcAddress(terraDLL, "Light_Destroy");
  Debug_DrawBoundingBox = (FUNC_Debug_DrawBoundingBox*) GetProcAddress(terraDLL, "Debug_DrawBoundingBox");
  Debug_DrawFrustum = (FUNC_Debug_DrawFrustum*) GetProcAddress(terraDLL, "Debug_DrawFrustum");
  Debug_DrawRay = (FUNC_Debug_DrawRay*) GetProcAddress(terraDLL, "Debug_DrawRay");
  Debug_DrawPlane = (FUNC_Debug_DrawPlane*) GetProcAddress(terraDLL, "Debug_DrawPlane");
  Camera_Create = (FUNC_Camera_Create*) GetProcAddress(terraDLL, "Camera_Create");
  Camera_Destroy = (FUNC_Camera_Destroy*) GetProcAddress(terraDLL, "Camera_Destroy");
  Camera_Move = (FUNC_Camera_Move*) GetProcAddress(terraDLL, "Camera_Move");
  Camera_Rotate = (FUNC_Camera_Rotate*) GetProcAddress(terraDLL, "Camera_Rotate");
  Camera_Fly = (FUNC_Camera_Fly*) GetProcAddress(terraDLL, "Camera_Fly");
  Camera_SetPosition = (FUNC_Camera_SetPosition*) GetProcAddress(terraDLL, "Camera_SetPosition");
  Camera_SetDirection = (FUNC_Camera_SetDirection*) GetProcAddress(terraDLL, "Camera_SetDirection");
  Camera_SetNearPlane = (FUNC_Camera_SetNearPlane*) GetProcAddress(terraDLL, "Camera_SetNearPlane");
  Camera_SetFarPlane = (FUNC_Camera_SetFarPlane*) GetProcAddress(terraDLL, "Camera_SetFarPlane");
  Camera_LookAt = (FUNC_Camera_LookAt*) GetProcAddress(terraDLL, "Camera_LookAt");
  Camera_GetPosition = (FUNC_Camera_GetPosition*) GetProcAddress(terraDLL, "Camera_GetPosition");
  Camera_GetDirection = (FUNC_Camera_GetDirection*) GetProcAddress(terraDLL, "Camera_GetDirection");
  Camera_GetRight = (FUNC_Camera_GetRight*) GetProcAddress(terraDLL, "Camera_GetRight");
  Camera_GetProjection = (FUNC_Camera_GetProjection*) GetProcAddress(terraDLL, "Camera_GetProjection");
  Camera_GetTransform = (FUNC_Camera_GetTransform*) GetProcAddress(terraDLL, "Camera_GetTransform");
  Camera_GetUp = (FUNC_Camera_GetUp*) GetProcAddress(terraDLL, "Camera_GetUp");
  Image_Create = (FUNC_Image_Create*) GetProcAddress(terraDLL, "Image_Create");
  Image_Load = (FUNC_Image_Load*) GetProcAddress(terraDLL, "Image_Load");
  Image_Destroy = (FUNC_Image_Destroy*) GetProcAddress(terraDLL, "Image_Destroy");
  Image_GetPixels = (FUNC_Image_GetPixels*) GetProcAddress(terraDLL, "Image_GetPixels");
  Image_GetWidth = (FUNC_Image_GetWidth*) GetProcAddress(terraDLL, "Image_GetWidth");
  Image_GetHeight = (FUNC_Image_GetHeight*) GetProcAddress(terraDLL, "Image_GetHeight");
  Image_GetPixel = (FUNC_Image_GetPixel*) GetProcAddress(terraDLL, "Image_GetPixel");
  Image_SetPixel = (FUNC_Image_SetPixel*) GetProcAddress(terraDLL, "Image_SetPixel");
  UI_Create = (FUNC_UI_Create*) GetProcAddress(terraDLL, "UI_Create");
  UI_Destroy = (FUNC_UI_Destroy*) GetProcAddress(terraDLL, "UI_Destroy");
  UI_SetColor = (FUNC_UI_SetColor*) GetProcAddress(terraDLL, "UI_SetColor");
  UI_SetFocus = (FUNC_UI_SetFocus*) GetProcAddress(terraDLL, "UI_SetFocus");
  UI_Clear = (FUNC_UI_Clear*) GetProcAddress(terraDLL, "UI_Clear");
  UI_GetLastWidget = (FUNC_UI_GetLastWidget*) GetProcAddress(terraDLL, "UI_GetLastWidget");
  UI_GetWidget = (FUNC_UI_GetWidget*) GetProcAddress(terraDLL, "UI_GetWidget");
  UI_DeleteWidget = (FUNC_UI_DeleteWidget*) GetProcAddress(terraDLL, "UI_DeleteWidget");
  UI_LoadCursor = (FUNC_UI_LoadCursor*) GetProcAddress(terraDLL, "UI_LoadCursor");
  UI_GetDefaultFont = (FUNC_UI_GetDefaultFont*) GetProcAddress(terraDLL, "UI_GetDefaultFont");
  UI_SetDefaultFont = (FUNC_UI_SetDefaultFont*) GetProcAddress(terraDLL, "UI_SetDefaultFont");
  UI_HasTransition = (FUNC_UI_HasTransition*) GetProcAddress(terraDLL, "UI_HasTransition");
  UI_CreateSlideTransition = (FUNC_UI_CreateSlideTransition*) GetProcAddress(terraDLL, "UI_CreateSlideTransition");
  UI_CreateFadeTransition = (FUNC_UI_CreateFadeTransition*) GetProcAddress(terraDLL, "UI_CreateFadeTransition");
  UI_SetTransitionCallback = (FUNC_UI_SetTransitionCallback*) GetProcAddress(terraDLL, "UI_SetTransitionCallback");
  UI_GetWidth = (FUNC_UI_GetWidth*) GetProcAddress(terraDLL, "UI_GetWidth");
  UI_GetHeight = (FUNC_UI_GetHeight*) GetProcAddress(terraDLL, "UI_GetHeight");
  UI_CreateWindow = (FUNC_UI_CreateWindow*) GetProcAddress(terraDLL, "UI_CreateWindow");
  UI_CreateButton = (FUNC_UI_CreateButton*) GetProcAddress(terraDLL, "UI_CreateButton");
  UI_CreateEditText = (FUNC_UI_CreateEditText*) GetProcAddress(terraDLL, "UI_CreateEditText");
  UI_CreateIcon = (FUNC_UI_CreateIcon*) GetProcAddress(terraDLL, "UI_CreateIcon");
  UI_CreateLabel = (FUNC_UI_CreateLabel*) GetProcAddress(terraDLL, "UI_CreateLabel");
  UI_CreateCheckbox = (FUNC_UI_CreateCheckbox*) GetProcAddress(terraDLL, "UI_CreateCheckbox");
  UI_CreateRadioButton = (FUNC_UI_CreateRadioButton*) GetProcAddress(terraDLL, "UI_CreateRadioButton");
  UI_MessageBox = (FUNC_UI_MessageBox*) GetProcAddress(terraDLL, "UI_MessageBox");
  UI_ChoiceBox = (FUNC_UI_ChoiceBox*) GetProcAddress(terraDLL, "UI_ChoiceBox");
  Widget_AddTween = (FUNC_Widget_AddTween*) GetProcAddress(terraDLL, "Widget_AddTween");
  Widget_SetDragging = (FUNC_Widget_SetDragging*) GetProcAddress(terraDLL, "Widget_SetDragging");
  Widget_SetScale = (FUNC_Widget_SetScale*) GetProcAddress(terraDLL, "Widget_SetScale");
  Widget_SetGroup = (FUNC_Widget_SetGroup*) GetProcAddress(terraDLL, "Widget_SetGroup");
  Widget_SetChecked = (FUNC_Widget_SetChecked*) GetProcAddress(terraDLL, "Widget_SetChecked");
  Widget_IsChecked = (FUNC_Widget_IsChecked*) GetProcAddress(terraDLL, "Widget_IsChecked");
  Widget_GetFont = (FUNC_Widget_GetFont*) GetProcAddress(terraDLL, "Widget_GetFont");
  Widget_SetCaption = (FUNC_Widget_SetCaption*) GetProcAddress(terraDLL, "Widget_SetCaption");
  Widget_SetText = (FUNC_Widget_SetText*) GetProcAddress(terraDLL, "Widget_SetText");
  Widget_SetOnClick = (FUNC_Widget_SetOnClick*) GetProcAddress(terraDLL, "Widget_SetOnClick");
  Widget_SetOnRelease = (FUNC_Widget_SetOnRelease*) GetProcAddress(terraDLL, "Widget_SetOnRelease");
  Widget_SetOnMouseOver = (FUNC_Widget_SetOnMouseOver*) GetProcAddress(terraDLL, "Widget_SetOnMouseOver");
  Widget_SetOnMouseOut = (FUNC_Widget_SetOnMouseOut*) GetProcAddress(terraDLL, "Widget_SetOnMouseOut");
  Widget_SetColor = (FUNC_Widget_SetColor*) GetProcAddress(terraDLL, "Widget_SetColor");
  Widget_SetPosition = (FUNC_Widget_SetPosition*) GetProcAddress(terraDLL, "Widget_SetPosition");
  Widget_SetVisible = (FUNC_Widget_SetVisible*) GetProcAddress(terraDLL, "Widget_SetVisible");
  Widget_ToggleVisibility = (FUNC_Widget_ToggleVisibility*) GetProcAddress(terraDLL, "Widget_ToggleVisibility");
  Widget_Hide = (FUNC_Widget_Hide*) GetProcAddress(terraDLL, "Widget_Hide");
  Widget_Show = (FUNC_Widget_Show*) GetProcAddress(terraDLL, "Widget_Show");
  Widget_IsVisible = (FUNC_Widget_IsVisible*) GetProcAddress(terraDLL, "Widget_IsVisible");
  Widget_HasTweens = (FUNC_Widget_HasTweens*) GetProcAddress(terraDLL, "Widget_HasTweens");
  Widget_GetSize = (FUNC_Widget_GetSize*) GetProcAddress(terraDLL, "Widget_GetSize");
  Widget_GetPosition = (FUNC_Widget_GetPosition*) GetProcAddress(terraDLL, "Widget_GetPosition");
  Widget_GetColor = (FUNC_Widget_GetColor*) GetProcAddress(terraDLL, "Widget_GetColor");
  Widget_GetName = (FUNC_Widget_GetName*) GetProcAddress(terraDLL, "Widget_GetName");
  Widget_GetCaption = (FUNC_Widget_GetCaption*) GetProcAddress(terraDLL, "Widget_GetCaption");
  Widget_GetText = (FUNC_Widget_GetText*) GetProcAddress(terraDLL, "Widget_GetText");
  Widget_SetAlign = (FUNC_Widget_SetAlign*) GetProcAddress(terraDLL, "Widget_SetAlign");
  Widget_CenterOnPoint = (FUNC_Widget_CenterOnPoint*) GetProcAddress(terraDLL, "Widget_CenterOnPoint");
  Tween_Create = (FUNC_Tween_Create*) GetProcAddress(terraDLL, "Tween_Create");
  Tween_SetEaseType = (FUNC_Tween_SetEaseType*) GetProcAddress(terraDLL, "Tween_SetEaseType");
  Tween_SetTime = (FUNC_Tween_SetTime*) GetProcAddress(terraDLL, "Tween_SetTime");
  Tween_SetDelay = (FUNC_Tween_SetDelay*) GetProcAddress(terraDLL, "Tween_SetDelay");
  Tween_SetUserData = (FUNC_Tween_SetUserData*) GetProcAddress(terraDLL, "Tween_SetUserData");
  Tween_SetCallback = (FUNC_Tween_SetCallback*) GetProcAddress(terraDLL, "Tween_SetCallback");
  Sprite_SetPosition = (FUNC_Sprite_SetPosition*) GetProcAddress(terraDLL, "Sprite_SetPosition");
  Sprite_GetWidth = (FUNC_Sprite_GetWidth*) GetProcAddress(terraDLL, "Sprite_GetWidth");
  Sprite_GetHeight = (FUNC_Sprite_GetHeight*) GetProcAddress(terraDLL, "Sprite_GetHeight");
  Sprite_SetWidth = (FUNC_Sprite_SetWidth*) GetProcAddress(terraDLL, "Sprite_SetWidth");
  Sprite_SetHeight = (FUNC_Sprite_SetHeight*) GetProcAddress(terraDLL, "Sprite_SetHeight");
  Sprite_SetAnchor = (FUNC_Sprite_SetAnchor*) GetProcAddress(terraDLL, "Sprite_SetAnchor");
  Sprite_SetTransform = (FUNC_Sprite_SetTransform*) GetProcAddress(terraDLL, "Sprite_SetTransform");
  Sprite_SetTransformOnCenter = (FUNC_Sprite_SetTransformOnCenter*) GetProcAddress(terraDLL, "Sprite_SetTransformOnCenter");
  Sprite_SetScaleOnCenter = (FUNC_Sprite_SetScaleOnCenter*) GetProcAddress(terraDLL, "Sprite_SetScaleOnCenter");
  Sprite_SetScale = (FUNC_Sprite_SetScale*) GetProcAddress(terraDLL, "Sprite_SetScale");
  Sprite_SetUniformScale = (FUNC_Sprite_SetUniformScale*) GetProcAddress(terraDLL, "Sprite_SetUniformScale");
  Sprite_SetRotation = (FUNC_Sprite_SetRotation*) GetProcAddress(terraDLL, "Sprite_SetRotation");
  Sprite_SetScaleAndRotationOnCenter = (FUNC_Sprite_SetScaleAndRotationOnCenter*) GetProcAddress(terraDLL, "Sprite_SetScaleAndRotationOnCenter");
  Sprite_SetUniformScaleAndRotationOnCenter = (FUNC_Sprite_SetUniformScaleAndRotationOnCenter*) GetProcAddress(terraDLL, "Sprite_SetUniformScaleAndRotationOnCenter");
  Sprite_SetScaleAndRotation = (FUNC_Sprite_SetScaleAndRotation*) GetProcAddress(terraDLL, "Sprite_SetScaleAndRotation");
  Sprite_SetUniformScaleAndRotation = (FUNC_Sprite_SetUniformScaleAndRotation*) GetProcAddress(terraDLL, "Sprite_SetUniformScaleAndRotation");
  Sprite_SetScaleRelativeOnCenter = (FUNC_Sprite_SetScaleRelativeOnCenter*) GetProcAddress(terraDLL, "Sprite_SetScaleRelativeOnCenter");
  Sprite_SetUniformScaleRelativeOnCenter = (FUNC_Sprite_SetUniformScaleRelativeOnCenter*) GetProcAddress(terraDLL, "Sprite_SetUniformScaleRelativeOnCenter");
  Sprite_SetScaleAndRotationRelativeOnCenter = (FUNC_Sprite_SetScaleAndRotationRelativeOnCenter*) GetProcAddress(terraDLL, "Sprite_SetScaleAndRotationRelativeOnCenter");
  Sprite_SetUniformScaleAndRotationRelativeOnCenter = (FUNC_Sprite_SetUniformScaleAndRotationRelativeOnCenter*) GetProcAddress(terraDLL, "Sprite_SetUniformScaleAndRotationRelativeOnCenter");
  Sprite_SetTransformRelative = (FUNC_Sprite_SetTransformRelative*) GetProcAddress(terraDLL, "Sprite_SetTransformRelative");
  Sprite_SetColors = (FUNC_Sprite_SetColors*) GetProcAddress(terraDLL, "Sprite_SetColors");
  Sprite_SetColor = (FUNC_Sprite_SetColor*) GetProcAddress(terraDLL, "Sprite_SetColor");
  Sprite_SetAlpha = (FUNC_Sprite_SetAlpha*) GetProcAddress(terraDLL, "Sprite_SetAlpha");
  Sprite_SetScroll = (FUNC_Sprite_SetScroll*) GetProcAddress(terraDLL, "Sprite_SetScroll");
  Sprite_SetMirror = (FUNC_Sprite_SetMirror*) GetProcAddress(terraDLL, "Sprite_SetMirror");
  Sprite_SetFlip = (FUNC_Sprite_SetFlip*) GetProcAddress(terraDLL, "Sprite_SetFlip");
  Sprite_TileRemapByID = (FUNC_Sprite_TileRemapByID*) GetProcAddress(terraDLL, "Sprite_TileRemapByID");
  Sprite_TileRemap = (FUNC_Sprite_TileRemap*) GetProcAddress(terraDLL, "Sprite_TileRemap");
  Sprite_PixelRemap = (FUNC_Sprite_PixelRemap*) GetProcAddress(terraDLL, "Sprite_PixelRemap");
  TileMap_Create = (FUNC_TileMap_Create*) GetProcAddress(terraDLL, "TileMap_Create");
  TileMap_Destroy = (FUNC_TileMap_Destroy*) GetProcAddress(terraDLL, "TileMap_Destroy");
  TileMap_Draw = (FUNC_TileMap_Draw*) GetProcAddress(terraDLL, "TileMap_Draw");
  TileMap_GetPosition = (FUNC_TileMap_GetPosition*) GetProcAddress(terraDLL, "TileMap_GetPosition");
  TileMap_SetPosition = (FUNC_TileMap_SetPosition*) GetProcAddress(terraDLL, "TileMap_SetPosition");
  TileMap_GetObjectCount = (FUNC_TileMap_GetObjectCount*) GetProcAddress(terraDLL, "TileMap_GetObjectCount");
  TileMap_GetObjectPosition = (FUNC_TileMap_GetObjectPosition*) GetProcAddress(terraDLL, "TileMap_GetObjectPosition");
  TileMap_GetObjectSize = (FUNC_TileMap_GetObjectSize*) GetProcAddress(terraDLL, "TileMap_GetObjectSize");
  TileMap_GetObjectTile = (FUNC_TileMap_GetObjectTile*) GetProcAddress(terraDLL, "TileMap_GetObjectTile");
  TileMap_GetTileAt = (FUNC_TileMap_GetTileAt*) GetProcAddress(terraDLL, "TileMap_GetTileAt");
  TileMap_GetObjectProperty = (FUNC_TileMap_GetObjectProperty*) GetProcAddress(terraDLL, "TileMap_GetObjectProperty");
  TileMap_GetTileProperty = (FUNC_TileMap_GetTileProperty*) GetProcAddress(terraDLL, "TileMap_GetTileProperty");
  Music_Play = (FUNC_Music_Play*) GetProcAddress(terraDLL, "Music_Play");
  Music_Stop = (FUNC_Music_Stop*) GetProcAddress(terraDLL, "Music_Stop");
  Music_SetVolume = (FUNC_Music_SetVolume*) GetProcAddress(terraDLL, "Music_SetVolume");
  Sound_Play = (FUNC_Sound_Play*) GetProcAddress(terraDLL, "Sound_Play");
  AI_PathGetSize = (FUNC_AI_PathGetSize*) GetProcAddress(terraDLL, "AI_PathGetSize");
  AI_PathGetNextNode = (FUNC_AI_PathGetNextNode*) GetProcAddress(terraDLL, "AI_PathGetNextNode");
  AI_NodeGetCoords = (FUNC_AI_NodeGetCoords*) GetProcAddress(terraDLL, "AI_NodeGetCoords");
  AI_CreatePath = (FUNC_AI_CreatePath*) GetProcAddress(terraDLL, "AI_CreatePath");
  AI_DestroyPath = (FUNC_AI_DestroyPath*) GetProcAddress(terraDLL, "AI_DestroyPath");
  XML_Open = (FUNC_XML_Open*) GetProcAddress(terraDLL, "XML_Open");
  XML_GetRoot = (FUNC_XML_GetRoot*) GetProcAddress(terraDLL, "XML_GetRoot");
  XML_GetNode = (FUNC_XML_GetNode*) GetProcAddress(terraDLL, "XML_GetNode");
  XML_GetNodeByIndex = (FUNC_XML_GetNodeByIndex*) GetProcAddress(terraDLL, "XML_GetNodeByIndex");
  XML_GetNodeCount = (FUNC_XML_GetNodeCount*) GetProcAddress(terraDLL, "XML_GetNodeCount");
  XML_GetNodeName = (FUNC_XML_GetNodeName*) GetProcAddress(terraDLL, "XML_GetNodeName");
  XML_GetNodeValue = (FUNC_XML_GetNodeValue*) GetProcAddress(terraDLL, "XML_GetNodeValue");
  XML_Destroy = (FUNC_XML_Destroy*) GetProcAddress(terraDLL, "XML_Destroy");
  NetClient_SetOnConnectionStart = (FUNC_NetClient_SetOnConnectionStart*) GetProcAddress(terraDLL, "NetClient_SetOnConnectionStart");
  NetClient_SetOnConnectionEnd = (FUNC_NetClient_SetOnConnectionEnd*) GetProcAddress(terraDLL, "NetClient_SetOnConnectionEnd");
  NetClient_GetLocalId = (FUNC_NetClient_GetLocalId*) GetProcAddress(terraDLL, "NetClient_GetLocalId");
  NetClient_IsConnected = (FUNC_NetClient_IsConnected*) GetProcAddress(terraDLL, "NetClient_IsConnected");
  NetClient_Connect = (FUNC_NetClient_Connect*) GetProcAddress(terraDLL, "NetClient_Connect");
  NetClient_Disconnect = (FUNC_NetClient_Disconnect*) GetProcAddress(terraDLL, "NetClient_Disconnect");
  NetClient_AddHandler = (FUNC_NetClient_AddHandler*) GetProcAddress(terraDLL, "NetClient_AddHandler");
  NetClient_SendMessage = (FUNC_NetClient_SendMessage*) GetProcAddress(terraDLL, "NetClient_SendMessage");
  Decal_Add = (FUNC_Decal_Add*) GetProcAddress(terraDLL, "Decal_Add");
  Billboard_Add = (FUNC_Billboard_Add*) GetProcAddress(terraDLL, "Billboard_Add");
  Billboard_Remap = (FUNC_Billboard_Remap*) GetProcAddress(terraDLL, "Billboard_Remap");
  Particles_Spawn = (FUNC_Particles_Spawn*) GetProcAddress(terraDLL, "Particles_Spawn");


	return 0;
}
#else

 void Settings_SetWidth(INT32 Width);
 void Settings_SetHeight(INT32 Height);
 void Settings_SetTitle(char* Title);
 void Settings_SetHandle(INT32 Handle);
 void Settings_SetFullScreen(bool Fullscreen);
 void Settings_SetVSync(bool Value);
 void Settings_SetAntialias(INT32 Samples);
 void Settings_SetLogging(bool Value);
 void Scene_SetOnRenderShadowCasters(TERRASceneCallback Callback);
 void Scene_SetOnRenderViewport(TERRASceneCallback Callback);
 void Scene_SetOnRenderSprites(TERRASceneCallback Callback);
 void Scene_SetOnRenderSky(TERRASceneCallback Callback);
 void TERRA_SetOnError(TERRAErrorCallback Callback);
 void TERRA_SetOnCreate(TERRAEventCallback Callback);
 void TERRA_SetOnDestroy(TERRAEventCallback Callback);
 void TERRA_SetOnIdle(TERRAEventCallback Callback);
 void TERRA_SetOnMouseDown(TERRAMouseEventCallback Callback);
 void TERRA_SetOnMouseUp(TERRAMouseEventCallback Callback);
 void TERRA_SetOnMouseMove(TERRAMouseMoveCallback Callback);
 void TERRA_SetOnMouseWheel(TERRAMouseWheelCallback Callback);
 void TERRA_SetOnKeyDown(TERRAKeyEventCallback Callback);
 void TERRA_SetOnKeyUp(TERRAKeyEventCallback Callback);
 void TERRA_SetOnAccelerometer(TERRAAccelerometerCallback Callback);
 void TERRA_SetOnStateChange(TERRAStateChangeCallback Callback);
 void TERRA_Run();
 void TERRA_Init();
 void TERRA_Shutdown();
 void TERRA_Resize(INT32 W, INT32 H);
 void TERRA_Log(char* Desc, INT32 LogType);
 UINT32 TERRA_GetTime();
 UINT32 TERRA_GetWidth();
 UINT32 TERRA_GetHeight();
 void TERRA_Pause(bool Pause);
 bool TERRA_Paused();
 void TERRA_EnableAds();
 void TERRA_SendAnalytics(char* Event, char* Value);
 char* Localization_GetLanguage();
 void Localization_SetLanguage(char* Lang);
 char* Localization_GetString(char* ID);
 void Input_SetKeyState(INT32 Key, bool State);
 bool Input_KeyDown(INT32 Key);
 bool Input_KeyPressed(INT32 Key);
 Vector2D Input_GetMousePosition();
 TERRAStream Stream_CreateBuffer(INT32 Size, void* Ptr);
 TERRAStream Stream_Create(char* Name);
 TERRAStream Stream_Open(char* Name);
 bool Stream_EOF(TERRAStream MyStream);
 void Stream_Destroy(TERRAStream MyStream);
 char* Stream_ReadLine(TERRAStream MyStream);
 INT32 Stream_Read(TERRAStream MyStream, void* Data, INT32 Size);
 INT32 Stream_Write(TERRAStream MyStream, void* Data, INT32 Size);
 void Stream_Seek(TERRAStream MyStream, INT32 Position);
 INT32 Stream_GetSize(TERRAStream MyStream);
 INT32 Stream_GetPosition(TERRAStream MyStream);
 char* AssetManager_Search(char* FileName);
 void AssetManager_AddPath(char* Path);
 void AssetManager_RemovePath(char* Path);
 void* AssetManager_GetTexture(char* Name);
 void* AssetManager_GetSound(char* Name);
 void* AssetManager_GetMesh(char* Name);
 void* AssetManager_GetFont(char* Name);
 void AssetManager_Prefetch(void* MyResource);
 void AssetManager_Unload(void* MyResource);
 TERRASession Session_Create(char* FileName);
 void Session_Save(TERRASession MySession);
 void Session_SetValue(TERRASession MySession, char* Key, char* Value);
 char* Session_GetValue(TERRASession MySession, char* Key);
 float Font_GetTextWidth(TERRAFont MyFont, char* Text);
 float Font_GetTextHeight(TERRAFont MyFont, char* Text);
 Vector2D Font_GetTextRect(TERRAFont MyFont, char* Text);
 void Font_DrawText(TERRAFont MyFont, float X, float Y, float Layer, char* Text, Color MyColor);
 TERRAShader Shader_GetFromFactory(UINT32 FxFlags, UINT32 OutFlags, UINT32 FogFlags, INT32 LightModel, INT32 DirLightCount, INT32 PointLightCount, INT32 SpotLightCount);
 void Shader_Bind(TERRAShader MyShader);
 void Shader_SetDefaultCameraUniforms();
 INT32 Shader_GetAttribute(TERRAShader MyShader, char* AttribName);
 void Shader_SetFloat(TERRAShader MyShader, char* UniformName, float Value);
 void Shader_SetVector(TERRAShader MyShader, char* UniformName, Vector3D Value);
 void Shader_SetColor(TERRAShader MyShader, char* UniformName, Color Value);
 void Shader_SetMatrix(TERRAShader MyShader, char* UniformName, Matrix4x4 Value);
 void Texture_Bind(TERRATexture Tex, INT32 Slot);
 INT32 Texture_GetWidth(TERRAImage Tex);
 INT32 Texture_GetHeight(TERRAImage Tex);
 TERRATexture Texture_Create(char* Name, INT32 Width, INT32 Height);
 void Texture_UpdateRect(TERRATexture Tex, TERRAImage Source, INT32 X, INT32 Y);
 TERRAImage Texture_GetImage(TERRATexture Tex);
 void Texture_SetWrapMode(TERRATexture Tex, bool Wrap);
 void Texture_SetMipMapping(TERRATexture Tex, bool UseMipmaps);
 void Texture_SetFiltering(TERRATexture Tex, INT32 Filtering);
 TERRASkybox Skybox_Create(char* Name);
 void Skybox_Render(TERRASkybox Sky);
 void Skybox_Destroy(TERRASkybox Sky);
 TERRAMeshInstance MeshInstance_Create(TERRAMesh MyMesh);
 void MeshInstance_PlayAnimation(TERRAMeshInstance Instance, char* AnimName);
 void MeshInstance_CrossFadeAnimation(TERRAMeshInstance Instance, char* AnimName, UINT32 Duration);
 void MeshInstance_SetDiffuseColor(TERRAMeshInstance Instance, INT32 Index, Color MyColor);
 void MeshInstance_SetDiffuseMap(TERRAMeshInstance Instance, INT32 Index, TERRATexture Tex);
 void MeshInstance_SetVisibility(TERRAMeshInstance Instance, INT32 Index, bool Visible);
 bool MeshInstance_Intersect(TERRAMeshInstance Instance, Ray R, float* T);
 void MeshInstance_SetPosition(TERRAMeshInstance Instance, Vector3D Position);
 void MeshInstance_SetRotation(TERRAMeshInstance Instance, Vector3D Rotation);
 void MeshInstance_SetScale(TERRAMeshInstance Instance, Vector3D Scale);
 void MeshInstance_SetTransform(TERRAMeshInstance Instance, Matrix4x4 Transform);
 void MeshInstance_Destroy(TERRAMeshInstance Instance);
 TERRAMeshGroup MeshInstance_GetGroup(TERRAMeshInstance Instance, char* Name);
 void MeshInstance_SetGroupLocalTransform(TERRAMeshInstance Instance, INT32 Index, Matrix4x4 Transform);
 void MeshInstance_SetGroupGlobalTransform(TERRAMeshInstance Instance, INT32 Index, Matrix4x4 Transform);
 BoundingBox MeshInstance_GetBoundingBox(TERRAMeshInstance Instance);
 INT32 MeshGroup_GetIndex(TERRAMeshGroup Group);
 BoundingBox MeshGroup_GetBoundingBox(TERRAMeshGroup Group);
 TERRAOccluder Occluder_Create();
 void Occluder_SetTransform(TERRAOccluder Occluder, Matrix4x4 Transform, float Width, float Height);
 bool Occluder_PointOccluded(TERRAOccluder Occluder, Vector3D P);
 bool Occluder_BoxOccluded(TERRAOccluder Occluder, BoundingBox Box);
 void Occluder_Destroy(TERRAOccluder Occluder);
 bool Graphics_IsBoxVisible(BoundingBox Box);
 void Graphics_SetBackgroundColor(Color MyColor);
 void Graphics_SetDynamicShadows(bool Enabled);
 void Graphics_SetPostProcessing(bool Enabled);
 void Graphics_SetNormalMapping(bool Enabled);
 void Graphics_SetDepthOfField(bool Enabled);
 void Graphics_SetSSAO(bool Enabled);
 void Graphics_SetFogFlags(UINT32 Flags);
 void Graphics_SetFogColor(Color MyColor);
 void Graphics_SetFogDensity(float Density);
 INT32 Graphics_StatsTriangleCount();
 INT32 Graphics_StatsShaderSwitches();
 INT32 Graphics_StatsDrawCalls();
 INT32 Graphics_StatsLightCount();
 INT32 Graphics_StatsOccluderCount();
 INT32 Graphics_StatsRenderableCount();
 INT32 Graphics_StatsFramesPerSecond();
 Ray Graphics_GetPickRay(TERRAViewport View, INT32 X, INT32 Y);
 void Graphics_AddRenderable(void* MyRenderable, UINT32 Flags);
 void Graphics_AddOccluder(TERRAOccluder Occluder);
 void Graphics_AddLight(TERRALight Light);
 TERRASprite Graphics_AddSprite(float X, float Y, float Layer, TERRATexture Tex);
 void Graphics_FlushSprites();
 TERRACamera Graphics_GetActiveCamera();
 TERRAViewport Graphics_GetActiveViewport();
 float Graphics_ElapsedTime();
 void Light_SetPriority(TERRALight MyLight, INT32 Priority);
 void Light_SetColor(TERRALight MyLight, Color MyColor);
 void Light_SetStatic(TERRALight MyLight, bool IsStatic);
 TERRALight Light_CreateDirectional(Vector3D Dir);
 TERRALight Light_CreatePoint(Vector3D Position, float Radius);
 void Light_Destroy(TERRALight P);
 void Debug_DrawBoundingBox(BoundingBox MyBox, Color MyColor);
 void Debug_DrawFrustum(Frustum MyFrustum, Color MyColor);
 void Debug_DrawRay(Ray MyRay, Color MyColor, float Length);
 void Debug_DrawPlane(Vector3D Position, Vector3D Normal, float Scale, Color MyColor);
 TERRACamera Camera_Create(char* Name);
 void Camera_Destroy(TERRACamera Cam);
 void Camera_Move(TERRACamera Cam, INT32 Dir, float Speed);
 void Camera_Rotate(TERRACamera Cam, float X, float Y);
 void Camera_Fly(TERRACamera Cam);
 void Camera_SetPosition(TERRACamera Cam, Vector3D Position);
 void Camera_SetDirection(TERRACamera Cam, Vector3D Direction);
 void Camera_SetNearPlane(TERRACamera Cam, float Distance);
 void Camera_SetFarPlane(TERRACamera Cam, float Distance);
 void Camera_LookAt(TERRACamera Cam, Vector3D Position);
 Vector3D Camera_GetPosition(TERRACamera Cam);
 Vector3D Camera_GetDirection(TERRACamera Cam);
 Vector3D Camera_GetRight(TERRACamera Cam);
 Matrix4x4 Camera_GetProjection(TERRACamera Cam);
 Matrix4x4 Camera_GetTransform(TERRACamera Cam);
 Vector3D Camera_GetUp(TERRACamera Cam);
 TERRAImage Image_Create(INT32 Width, INT32 Height);
 TERRAImage Image_Load(char* FileName);
 void Image_Destroy(TERRAImage Img);
 Color* Image_GetPixels(TERRAImage Image);
 INT32 Image_GetWidth(TERRAImage Image);
 INT32 Image_GetHeight(TERRAImage Image);
 Color Image_GetPixel(TERRAImage Image, INT32 X, INT32 Y);
 void Image_SetPixel(TERRAImage Image, INT32 X, INT32 Y, Color Pixel);
 TERRAUI UI_Create();
 void UI_Destroy(TERRAUI MyUI);
 void UI_SetColor(TERRAUI MyUI, Color MyColor);
 void UI_SetFocus(TERRAUI MyUI, TERRAWidget W);
 void UI_Clear(TERRAUI MyUI);
 TERRAWidget UI_GetLastWidget(TERRAUI MyUI);
 TERRAWidget UI_GetWidget(TERRAUI MyUI, char* Name);
 void UI_DeleteWidget(TERRAUI MyUI, TERRAWidget MyWidget);
 void UI_LoadCursor(TERRAUI MyUI, char* Name);
 TERRAFont UI_GetDefaultFont(TERRAUI MyUI);
 void UI_SetDefaultFont(TERRAUI MyUI, TERRAFont MyFont);
 bool UI_HasTransition(TERRAUI MyUI);
 void UI_CreateSlideTransition(TERRAUI MyUI, Vector2D Direction, UINT32 Duration, UINT32 Delay);
 void UI_CreateFadeTransition(TERRAUI MyUI, TERRATexture Tex, UINT32 Duration, UINT32 Delay, bool Invert);
 void UI_SetTransitionCallback(TERRAUI MyUI, TERRAFadeCallback Callback, void* UserData, bool OnStart);
 INT32 UI_GetWidth();
 INT32 UI_GetHeight();
 TERRAWidget UI_CreateWindow(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, INT32 Width, INT32 Height);
 TERRAWidget UI_CreateButton(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption, char* CustomPNG);
 TERRAWidget UI_CreateEditText(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, INT32 Width);
 TERRAWidget UI_CreateIcon(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Icon);
 TERRAWidget UI_CreateLabel(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
 TERRAWidget UI_CreateCheckbox(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
 TERRAWidget UI_CreateRadioButton(TERRAUI MyUI, char* Name, TERRAWidget Parent, float X, float Y, float Z, char* Caption);
 void UI_MessageBox(TERRAUI MyUI, char* Msg, TERRAWidgetEventHandler Callback);
 void UI_ChoiceBox(TERRAUI MyUI, char* Msg, char* Btn1, char* Btn2, TERRAWidgetEventHandler Callback1, TERRAWidgetEventHandler Callback2);
 TERRATween Widget_AddTween(TERRAWidget W, INT32 TweenType, float TargetValue, INT32 Time, INT32 Delay);
 void Widget_SetDragging(TERRAWidget W, bool Value);
 void Widget_SetScale(TERRAWidget W, float Scale);
 void Widget_SetGroup(TERRAWidget W, INT32 Group);
 void Widget_SetChecked(TERRAWidget W, bool Value);
 bool Widget_IsChecked(TERRAWidget W);
 TERRAFont Widget_GetFont(TERRAWidget W);
 void Widget_SetCaption(TERRAWidget W, char* Caption);
 void Widget_SetText(TERRAWidget W, char* Text);
 void Widget_SetOnClick(TERRAWidget W, TERRAWidgetEventHandler OnClick);
 void Widget_SetOnRelease(TERRAWidget W, TERRAWidgetEventHandler OnClick);
 void Widget_SetOnMouseOver(TERRAWidget W, TERRAWidgetEventHandler OnClick);
 void Widget_SetOnMouseOut(TERRAWidget W, TERRAWidgetEventHandler OnClick);
 void Widget_SetColor(TERRAWidget W, Color MyColor);
 void Widget_SetPosition(TERRAWidget W, Vector2D Pos);
 void Widget_SetVisible(TERRAWidget W, bool Visible);
 TERRATween Widget_ToggleVisibility(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
 TERRATween Widget_Hide(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
 TERRATween Widget_Show(TERRAWidget W, UINT32 Flags, UINT32 Delay, INT32 EaseType, INT32 Duration);
 bool Widget_IsVisible(TERRAWidget W);
 bool Widget_HasTweens(TERRAWidget W);
 Vector2D Widget_GetSize(TERRAWidget W);
 Vector2D Widget_GetPosition(TERRAWidget W);
 Color Widget_GetColor(TERRAWidget W);
 char* Widget_GetName(TERRAWidget W);
 char* Widget_GetCaption(TERRAWidget W);
 char* Widget_GetText(TERRAWidget W);
 void Widget_SetAlign(TERRAWidget W, UINT32 AlignMode);
 void Widget_CenterOnPoint(TERRAWidget W, float X, float Y);
 TERRATween Tween_Create(INT32 MyType, void* Data, float TargetValue, void* UserData);
 void Tween_SetEaseType(TERRATween T, INT32 EaseType);
 void Tween_SetTime(TERRATween T, UINT32 Time);
 void Tween_SetDelay(TERRATween T, UINT32 Delay);
 void Tween_SetUserData(TERRATween T, void* Data);
 void Tween_SetCallback(TERRATween T, TERRAFadeCallback Callback);
 void Sprite_SetPosition(TERRASprite Spr, float X, float Y);
 INT32 Sprite_GetWidth(TERRASprite Spr);
 INT32 Sprite_GetHeight(TERRASprite Spr);
 void Sprite_SetWidth(TERRASprite Spr, INT32 Width);
 void Sprite_SetHeight(TERRASprite Spr, INT32 Height);
 void Sprite_SetAnchor(TERRASprite Spr, Vector2D P);
 void Sprite_SetTransform(TERRASprite Spr, Matrix3x3 Mat);
 void Sprite_SetTransformOnCenter(TERRASprite Spr, Vector2D Center, Matrix3x3 Mat);
 void Sprite_SetScaleOnCenter(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY);
 void Sprite_SetScale(TERRASprite Spr, float ScaleX, float ScaleY);
 void Sprite_SetUniformScale(TERRASprite Spr, float Scale);
 void Sprite_SetRotation(TERRASprite Spr, float Angle);
 void Sprite_SetScaleAndRotationOnCenter(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY, float Rotation);
 void Sprite_SetUniformScaleAndRotationOnCenter(TERRASprite Spr, Vector2D Center, float Scale, float Rotation);
 void Sprite_SetScaleAndRotation(TERRASprite Spr, float ScaleX, float ScaleY, float Rotation);
 void Sprite_SetUniformScaleAndRotation(TERRASprite Spr, float Scale, float Rotation);
 void Sprite_SetScaleRelativeOnCenter(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY);
 void Sprite_SetUniformScaleRelativeOnCenter(TERRASprite Spr, Vector2D Center, float Scale);
 void Sprite_SetScaleAndRotationRelativeOnCenter(TERRASprite Spr, Vector2D Center, float ScaleX, float ScaleY, float Rotation);
 void Sprite_SetUniformScaleAndRotationRelativeOnCenter(TERRASprite Spr, Vector2D Center, float Scale, float Rotation);
 void Sprite_SetTransformRelative(TERRASprite Spr, Vector2D Center, Matrix3x3 Mat);
 void Sprite_SetColors(TERRASprite Spr, Color A, Color B, Color C, Color D);
 void Sprite_SetColor(TERRASprite Spr, Color C);
 void Sprite_SetAlpha(TERRASprite Spr, UINT8 Alpha);
 void Sprite_SetScroll(TERRASprite Spr, float U, float V);
 void Sprite_SetMirror(TERRASprite Spr, bool Mirror);
 void Sprite_SetFlip(TERRASprite Spr, bool Flip);
 void Sprite_TileRemapByID(TERRASprite Spr, INT32 TileID, INT32 TilesPerRow, INT32 TileSize);
 void Sprite_TileRemap(TERRASprite Spr, INT32 X, INT32 Y, INT32 TilesPerX, INT32 TilesPerY);
 void Sprite_PixelRemap(TERRASprite Spr, INT32 X1, INT32 Y1, INT32 X2, INT32 Y2, INT32 W, INT32 H);
 TERRATileMap TileMap_Create(char* Source);
 void TileMap_Destroy(TERRATileMap Map);
 void TileMap_Draw(TERRATileMap Map, float Depth);
 void TileMap_GetPosition(TERRATileMap Map, float* X, float Y);
 void TileMap_SetPosition(TERRATileMap Map, float* X, float Y);
 INT32 TileMap_GetObjectCount(TERRATileMap Map);
 void TileMap_GetObjectPosition(TERRATileMap Map, INT32 ID, float* X, float* Y);
 void TileMap_GetObjectSize(TERRATileMap Map, INT32 ID, float* W, float* H);
 void TileMap_GetObjectTile(TERRATileMap Map, INT32 ID, INT32* TX, INT32* TY);
 INT32 TileMap_GetTileAt(TERRATileMap Map, INT32 X, INT32 Y, INT32 Layer, bool UsePalette);
 char* TileMap_GetObjectProperty(TERRATileMap Map, INT32 ID, char* Key);
 char* TileMap_GetTileProperty(TERRATileMap Map, INT32 ID, char* Key);
 void Music_Play(char* FileName);
 void Music_Stop();
 void Music_SetVolume(float Volume);
 TERRASoundSource Sound_Play(TERRASound MySound);
 INT32 AI_PathGetSize(TERRAPath Path);
 TERRAPathNode AI_PathGetNextNode(TERRAPath Path);
 void AI_NodeGetCoords(TERRAPathNode Node, INT32* X, INT32* Y);
 INT32 AI_CreatePath(INT32 StartX, INT32 StartY, INT32 EndX, INT32 EndY, INT32 MinX, INT32 MinY, INT32 MaxX, INT32 MaxY, TERRAPath Path, INT32 Flags, TERRAPathCostCallback GetCostCallback, TERRAVisitNodeCallback VisitCallback);
 void AI_DestroyPath(TERRAPath Path);
 TERRAXML XML_Open(char* Name);
 TERRAXMLNode XML_GetRoot(TERRAXML XML);
 TERRAXMLNode XML_GetNode(TERRAXMLNode Node, char* Name);
 TERRAXMLNode XML_GetNodeByIndex(TERRAXMLNode Node, INT32 ID);
 INT32 XML_GetNodeCount(TERRAXMLNode Node);
 char* XML_GetNodeName(TERRAXMLNode Node);
 char* XML_GetNodeValue(TERRAXMLNode Node);
 void XML_Destroy(TERRAXML XML);
 void NetClient_SetOnConnectionStart(TERRANetworkCallback Handler);
 void NetClient_SetOnConnectionEnd(TERRANetworkCallback Handler);
 INT32 NetClient_GetLocalId();
 bool NetClient_IsConnected();
 void NetClient_Connect(char* Address, UINT16 Port, UINT16 Version, char* Username, char* Password);
 void NetClient_Disconnect();
 void NetClient_AddHandler(UINT8 OpCode, TERRANetworkHandler Handler);
 bool NetClient_SendMessage(TERRANetMessage S);
 void Decal_Add(char* TextureName, Vector3D Position, Vector3D Normal, Color DecalColor, float Size, float Rotation, INT32 Duration);
 TERRABillboard Billboard_Add(Vector3D Position, float Width, float Height, TERRATexture MyTexture);
 void Billboard_Remap(TERRABillboard Billboard, float U1, float V1, float U2, float V2);
 TERRAParticles Particles_Spawn(char* FXName, Vector3D Position, bool Loop);



#endif

#ifdef __cplusplus
}
#endif
#endif

